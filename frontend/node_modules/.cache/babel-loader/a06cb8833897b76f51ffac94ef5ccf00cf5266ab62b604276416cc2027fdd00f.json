{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lusana ko project\\\\Lusana ko project\\\\frontend\\\\src\\\\pages\\\\admin\\\\Questions.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport Navbar from \"../../components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminQuestions() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [questions, setQuestions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  // For adding/editing questions\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState({\n    _id: \"\",\n    text: \"\",\n    options: [\"\", \"\", \"\", \"\"],\n    correctOption: 0,\n    categoryId: \"\",\n    difficulty: \"medium\" // default difficulty\n  });\n\n  // For adding categories\n  const [isCategoryModalOpen, setIsCategoryModalOpen] = useState(false);\n  const [newCategory, setNewCategory] = useState(\"\");\n\n  // For filtering\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const categoriesResponse = await axios.get(\"http://localhost:5000/api/categories\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setCategories(categoriesResponse.data);\n        const questionsResponse = await axios.get(\"http://localhost:5000/api/questions\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setQuestions(questionsResponse.data);\n        console.log(\"Categories:\", categoriesResponse.data);\n        console.log(\"Questions:\", questionsResponse.data);\n      } catch (error) {\n        setError(\"Failed to load data\");\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddQuestion = () => {\n    setIsEditMode(false);\n    setCurrentQuestion({\n      _id: \"\",\n      text: \"\",\n      options: [\"\", \"\", \"\", \"\"],\n      correctOption: 0,\n      categoryId: categories.length > 0 ? categories[0]._id : \"\",\n      difficulty: \"medium\" // default difficulty here too\n    });\n    setIsModalOpen(true);\n  };\n  const handleEditQuestion = question => {\n    setIsEditMode(true);\n    setCurrentQuestion({\n      _id: question._id,\n      text: question.text,\n      options: [...question.options],\n      correctOption: question.correctOption,\n      categoryId: question.categoryId,\n      difficulty: question.difficulty || \"medium\"\n    });\n    setIsModalOpen(true);\n  };\n  const handleDeleteQuestion = async questionId => {\n    if (!window.confirm(\"Are you sure you want to delete this question?\")) {\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:5000/api/questions/${questionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Update questions list\n      setQuestions(questions.filter(q => q._id !== questionId));\n    } catch (error) {\n      setError(\"Failed to delete question\");\n      console.error(error);\n    }\n  };\n  const handleSaveQuestion = async () => {\n    try {\n      var _currentQuestion$cate;\n      const token = localStorage.getItem(\"token\");\n      console.log(\"Current Question:\", currentQuestion);\n      console.log(\"categoryId type:\", typeof currentQuestion.categoryId);\n      console.log(\"categoryId value:\", currentQuestion.categoryId);\n      console.log(\"categoryId length:\", (_currentQuestion$cate = currentQuestion.categoryId) === null || _currentQuestion$cate === void 0 ? void 0 : _currentQuestion$cate.length);\n      console.log(\"difficulty value:\", currentQuestion.difficulty);\n\n      // Validate form before sending\n      if (!currentQuestion.text || !currentQuestion.text.trim()) {\n        return setError(\"Question text is required\");\n      }\n      if (!Array.isArray(currentQuestion.options) || currentQuestion.options.length < 2 || currentQuestion.options.some(opt => !opt || !opt.trim())) {\n        return setError(\"All options must be filled and at least 2 options required\");\n      }\n      if (!currentQuestion.categoryId || currentQuestion.categoryId.length !== 24) {\n        return setError(\"Valid category is required\");\n      }\n      if (currentQuestion.correctOption === undefined || currentQuestion.correctOption === null || typeof currentQuestion.correctOption !== \"number\" || currentQuestion.correctOption < 0 || currentQuestion.correctOption >= currentQuestion.options.length) {\n        return setError(\"Please select a valid correct option\");\n      }\n      if (!currentQuestion.difficulty || ![\"easy\", \"medium\", \"hard\"].includes(currentQuestion.difficulty)) {\n        return setError(\"Please select a valid difficulty level\");\n      }\n\n      // Prepare payload\n      const payload = {\n        text: currentQuestion.text.trim(),\n        options: currentQuestion.options.map(opt => opt.trim()),\n        categoryId: currentQuestion.categoryId,\n        difficulty: currentQuestion.difficulty,\n        correctOption: currentQuestion.correctOption\n      };\n      console.log(\"Sending payload to backend:\", JSON.stringify(payload, null, 2));\n      const response = isEditMode ? await axios.put(`http://localhost:5000/api/questions/${currentQuestion._id}`, payload, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }) : await axios.post(\"http://localhost:5000/api/questions\", payload, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (isEditMode) {\n        setQuestions(questions.map(q => q._id === currentQuestion._id ? response.data : q));\n      } else {\n        setQuestions([...questions, response.data]);\n      }\n      setIsModalOpen(false);\n      setError(\"\");\n    } catch (error) {\n      setError(\"Failed to save question\");\n      console.error(\"Full error object:\", error);\n    }\n  };\n  const resolveCategoryName = category => {\n    if (!category) return \"Unknown Category\";\n\n    // If category is an object with a name property, return the name directly\n    if (typeof category === \"object\" && category.name) {\n      return category.name;\n    }\n\n    // Otherwise, category is expected to be an ID string\n    const cat = categories.find(cat => cat._id === category);\n    return cat ? cat.name : \"Unknown Category\";\n  };\n  const handleAddCategory = async () => {\n    try {\n      if (!newCategory.trim()) {\n        return setError(\"Category name is required\");\n      }\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:5000/api/categories\", {\n        name: newCategory\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Update categories list\n      setCategories([...categories, response.data]);\n      setNewCategory(\"\");\n      setIsCategoryModalOpen(false);\n      setError(\"\");\n    } catch (error) {\n      setError(\"Failed to add category\");\n      console.error(error);\n    }\n  };\n  const handleOptionChange = (index, value) => {\n    const updatedOptions = [...currentQuestion.options];\n    updatedOptions[index] = value;\n    setCurrentQuestion({\n      ...currentQuestion,\n      options: updatedOptions\n    });\n  };\n\n  // Filter questions based on category and search term\n  const filteredQuestions = questions.filter(question => {\n    if (selectedCategory === \"all\") return true;\n    const selectedCategoryObj = categories.find(cat => cat._id === selectedCategory);\n    if (!selectedCategoryObj) return false;\n    const selectedCategoryName = selectedCategoryObj.name;\n    let questionCategoryName = \"Unknown Category\";\n    if (typeof question.category === \"object\" && question.category !== null && question.category.name) {\n      questionCategoryName = question.category.name;\n    } else if (typeof question.category === \"string\") {\n      const cat = categories.find(cat => cat._id === question.category);\n      questionCategoryName = cat ? cat.name : \"Unknown Category\";\n    }\n    const matchesCategory = questionCategoryName === selectedCategoryName;\n    const matchesSearch = question.text.toLowerCase().includes(searchTerm.toLowerCase());\n    return matchesCategory && matchesSearch;\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: \"Loading questions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6 max-w-6xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-purple-600\",\n            children: \"Manage Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsCategoryModalOpen(true),\n              className: \"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded transition\",\n              children: \"Add Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddQuestion,\n              className: \"bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded transition\",\n              children: \"Add Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 flex flex-wrap gap-4 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCategory,\n            onChange: e => setSelectedCategory(e.target.value),\n            className: \"border border-gray-300 rounded px-3 py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category._id,\n              children: category.name\n            }, category._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search questions...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            className: \"border border-gray-300 rounded px-3 py-2 flex-grow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 text-red-600 font-semibold\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full border border-gray-300 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-purple-600 text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-3\",\n                children: \"Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-3\",\n                children: \"Options\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-3\",\n                children: \"Correct Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-3\",\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-3\",\n                children: \"Difficulty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-3\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [filteredQuestions.map(question => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-t border-gray-300\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-3 max-w-xs break-words\",\n                children: question.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-3 max-w-xs break-words\",\n                children: question.options.join(\", \")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-3 text-center\",\n                children: question.correctOption + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-3 text-center\",\n                children: resolveCategoryName(question.categoryId || question.category)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-3 text-center\",\n                children: question.difficulty || \"medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-3 text-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEditQuestion(question),\n                  className: \"bg-blue-600 hover:bg-blue-700 text-white px-2 py-1 rounded\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteQuestion(question._id),\n                  className: \"bg-red-600 hover:bg-red-700 text-white px-2 py-1 rounded\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)]\n            }, question._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)), filteredQuestions.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"6\",\n                className: \"p-4 text-center text-gray-500\",\n                children: \"No questions found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: isEditMode ? \"Edit Question\" : \"Add Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 mb-2 font-semibold\",\n          htmlFor: \"question-text\",\n          children: \"Question Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"question-text\",\n          rows: \"3\",\n          className: \"w-full border border-gray-300 rounded p-2 mb-4\",\n          value: currentQuestion.text,\n          onChange: e => setCurrentQuestion({\n            ...currentQuestion,\n            text: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), currentQuestion.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `option-${idx}`,\n            className: \"block text-gray-700 font-semibold\",\n            children: [\"Option \", idx + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `option-${idx}`,\n            type: \"text\",\n            className: \"w-full border border-gray-300 rounded p-2\",\n            value: option,\n            onChange: e => handleOptionChange(idx, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 mb-2 font-semibold\",\n          htmlFor: \"correct-option-select\",\n          children: \"Correct Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"correct-option-select\",\n          className: \"w-full border border-gray-300 rounded p-2 mb-4\",\n          value: currentQuestion.correctOption,\n          onChange: e => setCurrentQuestion({\n            ...currentQuestion,\n            correctOption: parseInt(e.target.value, 10)\n          }),\n          children: currentQuestion.options.map((_, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: idx,\n            children: [\"Option \", idx + 1]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 mb-2 font-semibold\",\n          htmlFor: \"category-select\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category-select\",\n          className: \"w-full border border-gray-300 rounded p-2 mb-4\",\n          value: currentQuestion.categoryId,\n          onChange: e => setCurrentQuestion({\n            ...currentQuestion,\n            categoryId: e.target.value\n          }),\n          children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category._id,\n            children: category.name\n          }, category._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 mb-2 font-semibold\",\n          htmlFor: \"difficulty-select\",\n          children: \"Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"difficulty-select\",\n          className: \"w-full border border-gray-300 rounded p-2 mb-4\",\n          value: currentQuestion.difficulty,\n          onChange: e => setCurrentQuestion({\n            ...currentQuestion,\n            difficulty: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-4 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setIsModalOpen(false);\n              setError(\"\");\n            },\n            className: \"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveQuestion,\n            className: \"bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded\",\n            children: isEditMode ? \"Save Changes\" : \"Add Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this), isCategoryModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Category Name\",\n          value: newCategory,\n          onChange: e => setNewCategory(e.target.value),\n          className: \"w-full border border-gray-300 rounded p-2 mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setIsCategoryModalOpen(false);\n              setError(\"\");\n            },\n            className: \"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddCategory,\n            className: \"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded\",\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminQuestions, \"/A/fdYQSnORkP7HitUPI0fu1qps=\", false, function () {\n  return [useAuth];\n});\n_c = AdminQuestions;\nexport default AdminQuestions;\nvar _c;\n$RefreshReg$(_c, \"AdminQuestions\");","map":{"version":3,"names":["useState","useEffect","axios","useAuth","Navbar","jsxDEV","_jsxDEV","AdminQuestions","_s","user","questions","setQuestions","categories","setCategories","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","isEditMode","setIsEditMode","currentQuestion","setCurrentQuestion","_id","text","options","correctOption","categoryId","difficulty","isCategoryModalOpen","setIsCategoryModalOpen","newCategory","setNewCategory","selectedCategory","setSelectedCategory","searchTerm","setSearchTerm","fetchData","token","localStorage","getItem","categoriesResponse","get","headers","Authorization","data","questionsResponse","console","log","handleAddQuestion","length","handleEditQuestion","question","handleDeleteQuestion","questionId","window","confirm","delete","filter","q","handleSaveQuestion","_currentQuestion$cate","trim","Array","isArray","some","opt","undefined","includes","payload","map","JSON","stringify","response","put","post","resolveCategoryName","category","name","cat","find","handleAddCategory","handleOptionChange","index","value","updatedOptions","filteredQuestions","selectedCategoryObj","selectedCategoryName","questionCategoryName","matchesCategory","matchesSearch","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","type","placeholder","join","colSpan","htmlFor","id","rows","option","idx","parseInt","_","_c","$RefreshReg$"],"sources":["D:/Lusana ko project/Lusana ko project/frontend/src/pages/admin/Questions.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport Navbar from \"../../components/Navbar\"\n\nfunction AdminQuestions() {\n  const { user } = useAuth()\n  const [questions, setQuestions] = useState([])\n  const [categories, setCategories] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(\"\")\n\n  // For adding/editing questions\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [isEditMode, setIsEditMode] = useState(false)\n  const [currentQuestion, setCurrentQuestion] = useState({\n    _id: \"\",\n    text: \"\",\n    options: [\"\", \"\", \"\", \"\"],\n    correctOption: 0,\n    categoryId: \"\",\n    difficulty: \"medium\", // default difficulty\n  })\n\n  // For adding categories\n  const [isCategoryModalOpen, setIsCategoryModalOpen] = useState(false)\n  const [newCategory, setNewCategory] = useState(\"\")\n\n  // For filtering\n  const [selectedCategory, setSelectedCategory] = useState(\"all\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\")\n\n        const categoriesResponse = await axios.get(\n          \"http://localhost:5000/api/categories\",\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          },\n        )\n        setCategories(categoriesResponse.data)\n\n        const questionsResponse = await axios.get(\n          \"http://localhost:5000/api/questions\",\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          },\n        )\n        setQuestions(questionsResponse.data)\n\n        console.log(\"Categories:\", categoriesResponse.data)\n        console.log(\"Questions:\", questionsResponse.data)\n      } catch (error) {\n        setError(\"Failed to load data\")\n        console.error(error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchData()\n  }, [])\n\n  const handleAddQuestion = () => {\n    setIsEditMode(false)\n    setCurrentQuestion({\n      _id: \"\",\n      text: \"\",\n      options: [\"\", \"\", \"\", \"\"],\n      correctOption: 0,\n      categoryId: categories.length > 0 ? categories[0]._id : \"\",\n      difficulty: \"medium\", // default difficulty here too\n    })\n    setIsModalOpen(true)\n  }\n\n  const handleEditQuestion = (question) => {\n    setIsEditMode(true)\n    setCurrentQuestion({\n      _id: question._id,\n      text: question.text,\n      options: [...question.options],\n      correctOption: question.correctOption,\n      categoryId: question.categoryId,\n      difficulty: question.difficulty || \"medium\",\n    })\n    setIsModalOpen(true)\n  }\n\n  const handleDeleteQuestion = async (questionId) => {\n    if (!window.confirm(\"Are you sure you want to delete this question?\")) {\n      return\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\")\n      await axios.delete(`http://localhost:5000/api/questions/${questionId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n\n      // Update questions list\n      setQuestions(questions.filter((q) => q._id !== questionId))\n    } catch (error) {\n      setError(\"Failed to delete question\")\n      console.error(error)\n    }\n  }\n\n  const handleSaveQuestion = async () => {\n    try {\n      const token = localStorage.getItem(\"token\")\n\n      console.log(\"Current Question:\", currentQuestion)\n      console.log(\"categoryId type:\", typeof currentQuestion.categoryId)\n      console.log(\"categoryId value:\", currentQuestion.categoryId)\n      console.log(\"categoryId length:\", currentQuestion.categoryId?.length)\n      console.log(\"difficulty value:\", currentQuestion.difficulty)\n\n      // Validate form before sending\n      if (!currentQuestion.text || !currentQuestion.text.trim()) {\n        return setError(\"Question text is required\")\n      }\n\n      if (\n        !Array.isArray(currentQuestion.options) ||\n        currentQuestion.options.length < 2 ||\n        currentQuestion.options.some((opt) => !opt || !opt.trim())\n      ) {\n        return setError(\"All options must be filled and at least 2 options required\")\n      }\n\n      if (!currentQuestion.categoryId || currentQuestion.categoryId.length !== 24) {\n        return setError(\"Valid category is required\")\n      }\n\n      if (\n        currentQuestion.correctOption === undefined ||\n        currentQuestion.correctOption === null ||\n        typeof currentQuestion.correctOption !== \"number\" ||\n        currentQuestion.correctOption < 0 ||\n        currentQuestion.correctOption >= currentQuestion.options.length\n      ) {\n        return setError(\"Please select a valid correct option\")\n      }\n\n      if (\n        !currentQuestion.difficulty ||\n        ![\"easy\", \"medium\", \"hard\"].includes(currentQuestion.difficulty)\n      ) {\n        return setError(\"Please select a valid difficulty level\")\n      }\n\n      // Prepare payload\n      const payload = {\n        text: currentQuestion.text.trim(),\n        options: currentQuestion.options.map((opt) => opt.trim()),\n        categoryId: currentQuestion.categoryId,\n        difficulty: currentQuestion.difficulty,\n        correctOption: currentQuestion.correctOption,\n      }\n\n      console.log(\"Sending payload to backend:\", JSON.stringify(payload, null, 2))\n\n      const response = isEditMode\n        ? await axios.put(\n            `http://localhost:5000/api/questions/${currentQuestion._id}`,\n            payload,\n            {\n              headers: { Authorization: `Bearer ${token}` },\n            },\n          )\n        : await axios.post(\"http://localhost:5000/api/questions\", payload, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n\n      if (isEditMode) {\n        setQuestions(\n          questions.map((q) => (q._id === currentQuestion._id ? response.data : q)),\n        )\n      } else {\n        setQuestions([...questions, response.data])\n      }\n\n      setIsModalOpen(false)\n      setError(\"\")\n    } catch (error) {\n      setError(\"Failed to save question\")\n      console.error(\"Full error object:\", error)\n    }\n  }\n\n  const resolveCategoryName = (category) => {\n    if (!category) return \"Unknown Category\"\n\n    // If category is an object with a name property, return the name directly\n    if (typeof category === \"object\" && category.name) {\n      return category.name\n    }\n\n    // Otherwise, category is expected to be an ID string\n    const cat = categories.find((cat) => cat._id === category)\n    return cat ? cat.name : \"Unknown Category\"\n  }\n\n  const handleAddCategory = async () => {\n    try {\n      if (!newCategory.trim()) {\n        return setError(\"Category name is required\")\n      }\n\n      const token = localStorage.getItem(\"token\")\n      const response = await axios.post(\n        \"http://localhost:5000/api/categories\",\n        {\n          name: newCategory,\n        },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        },\n      )\n\n      // Update categories list\n      setCategories([...categories, response.data])\n      setNewCategory(\"\")\n      setIsCategoryModalOpen(false)\n      setError(\"\")\n    } catch (error) {\n      setError(\"Failed to add category\")\n      console.error(error)\n    }\n  }\n\n  const handleOptionChange = (index, value) => {\n    const updatedOptions = [...currentQuestion.options]\n    updatedOptions[index] = value\n    setCurrentQuestion({\n      ...currentQuestion,\n      options: updatedOptions,\n    })\n  }\n\n  // Filter questions based on category and search term\n  const filteredQuestions = questions.filter((question) => {\n    if (selectedCategory === \"all\") return true\n\n    const selectedCategoryObj = categories.find((cat) => cat._id === selectedCategory)\n    if (!selectedCategoryObj) return false\n\n    const selectedCategoryName = selectedCategoryObj.name\n\n    let questionCategoryName = \"Unknown Category\"\n    if (\n      typeof question.category === \"object\" &&\n      question.category !== null &&\n      question.category.name\n    ) {\n      questionCategoryName = question.category.name\n    } else if (typeof question.category === \"string\") {\n      const cat = categories.find((cat) => cat._id === question.category)\n      questionCategoryName = cat ? cat.name : \"Unknown Category\"\n    }\n\n    const matchesCategory = questionCategoryName === selectedCategoryName\n    const matchesSearch = question.text.toLowerCase().includes(searchTerm.toLowerCase())\n\n    return matchesCategory && matchesSearch\n  })\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-100\">\n        <Navbar />\n        <div className=\"container mx-auto px-4 py-8\">\n          <div className=\"text-center\">Loading questions...</div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <Navbar />\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"bg-white rounded-lg shadow-md p-6 max-w-6xl mx-auto\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h1 className=\"text-2xl font-bold text-purple-600\">Manage Questions</h1>\n            <div className=\"flex space-x-2\">\n              <button\n                onClick={() => setIsCategoryModalOpen(true)}\n                className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded transition\"\n              >\n                Add Category\n              </button>\n              <button\n                onClick={handleAddQuestion}\n                className=\"bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded transition\"\n              >\n                Add Question\n              </button>\n            </div>\n          </div>\n\n          {/* Filters */}\n          <div className=\"mb-6 flex flex-wrap gap-4 items-center\">\n            <select\n              value={selectedCategory}\n              onChange={(e) => setSelectedCategory(e.target.value)}\n              className=\"border border-gray-300 rounded px-3 py-2\"\n            >\n              <option value=\"all\">All Categories</option>\n              {categories.map((category) => (\n                <option key={category._id} value={category._id}>\n                  {category.name}\n                </option>\n              ))}\n            </select>\n\n            <input\n              type=\"text\"\n              placeholder=\"Search questions...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"border border-gray-300 rounded px-3 py-2 flex-grow\"\n            />\n          </div>\n\n          {error && (\n            <div className=\"mb-4 text-red-600 font-semibold\">{error}</div>\n          )}\n\n          {/* Questions Table */}\n          <table className=\"w-full border border-gray-300 rounded\">\n            <thead className=\"bg-purple-600 text-white\">\n              <tr>\n                <th className=\"p-3\">Question</th>\n                <th className=\"p-3\">Options</th>\n                <th className=\"p-3\">Correct Option</th>\n                <th className=\"p-3\">Category</th>\n                <th className=\"p-3\">Difficulty</th>\n                <th className=\"p-3\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredQuestions.map((question) => (\n                <tr key={question._id} className=\"border-t border-gray-300\">\n                  <td className=\"p-3 max-w-xs break-words\">{question.text}</td>\n                  <td className=\"p-3 max-w-xs break-words\">\n                    {question.options.join(\", \")}\n                  </td>\n                  <td className=\"p-3 text-center\">{question.correctOption + 1}</td>\n                  <td className=\"p-3 text-center\">{resolveCategoryName(question.categoryId || question.category)}</td>\n                  <td className=\"p-3 text-center\">{question.difficulty || \"medium\"}</td>\n                  <td className=\"p-3 text-center space-x-2\">\n                    <button\n                      onClick={() => handleEditQuestion(question)}\n                      className=\"bg-blue-600 hover:bg-blue-700 text-white px-2 py-1 rounded\"\n                    >\n                      Edit\n                    </button>\n                    <button\n                      onClick={() => handleDeleteQuestion(question._id)}\n                      className=\"bg-red-600 hover:bg-red-700 text-white px-2 py-1 rounded\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n\n              {filteredQuestions.length === 0 && (\n                <tr>\n                  <td colSpan=\"6\" className=\"p-4 text-center text-gray-500\">\n                    No questions found.\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Question Modal */}\n      {isModalOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n            <h2 className=\"text-xl font-semibold mb-4\">\n              {isEditMode ? \"Edit Question\" : \"Add Question\"}\n            </h2>\n\n            <label className=\"block text-gray-700 mb-2 font-semibold\" htmlFor=\"question-text\">\n              Question Text\n            </label>\n            <textarea\n              id=\"question-text\"\n              rows=\"3\"\n              className=\"w-full border border-gray-300 rounded p-2 mb-4\"\n              value={currentQuestion.text}\n              onChange={(e) =>\n                setCurrentQuestion({ ...currentQuestion, text: e.target.value })\n              }\n            ></textarea>\n\n            {/* Options */}\n            {currentQuestion.options.map((option, idx) => (\n              <div key={idx} className=\"mb-3\">\n                <label\n                  htmlFor={`option-${idx}`}\n                  className=\"block text-gray-700 font-semibold\"\n                >\n                  Option {idx + 1}\n                </label>\n                <input\n                  id={`option-${idx}`}\n                  type=\"text\"\n                  className=\"w-full border border-gray-300 rounded p-2\"\n                  value={option}\n                  onChange={(e) => handleOptionChange(idx, e.target.value)}\n                />\n              </div>\n            ))}\n\n            <label className=\"block text-gray-700 mb-2 font-semibold\" htmlFor=\"correct-option-select\">\n              Correct Option\n            </label>\n            <select\n              id=\"correct-option-select\"\n              className=\"w-full border border-gray-300 rounded p-2 mb-4\"\n              value={currentQuestion.correctOption}\n              onChange={(e) =>\n                setCurrentQuestion({\n                  ...currentQuestion,\n                  correctOption: parseInt(e.target.value, 10),\n                })\n              }\n            >\n              {currentQuestion.options.map((_, idx) => (\n                <option key={idx} value={idx}>\n                  Option {idx + 1}\n                </option>\n              ))}\n            </select>\n\n            <label className=\"block text-gray-700 mb-2 font-semibold\" htmlFor=\"category-select\">\n              Category\n            </label>\n            <select\n              id=\"category-select\"\n              className=\"w-full border border-gray-300 rounded p-2 mb-4\"\n              value={currentQuestion.categoryId}\n              onChange={(e) =>\n                setCurrentQuestion({ ...currentQuestion, categoryId: e.target.value })\n              }\n            >\n              {categories.map((category) => (\n                <option key={category._id} value={category._id}>\n                  {category.name}\n                </option>\n              ))}\n            </select>\n\n            <label className=\"block text-gray-700 mb-2 font-semibold\" htmlFor=\"difficulty-select\">\n              Difficulty\n            </label>\n            <select\n              id=\"difficulty-select\"\n              className=\"w-full border border-gray-300 rounded p-2 mb-4\"\n              value={currentQuestion.difficulty}\n              onChange={(e) =>\n                setCurrentQuestion({ ...currentQuestion, difficulty: e.target.value })\n              }\n            >\n              <option value=\"easy\">Easy</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"hard\">Hard</option>\n            </select>\n\n            <div className=\"flex justify-end space-x-4 mt-6\">\n              <button\n                onClick={() => {\n                  setIsModalOpen(false)\n                  setError(\"\")\n                }}\n                className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSaveQuestion}\n                className=\"bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded\"\n              >\n                {isEditMode ? \"Save Changes\" : \"Add Question\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Category Modal */}\n      {isCategoryModalOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-md\">\n            <h2 className=\"text-xl font-semibold mb-4\">Add Category</h2>\n\n            <input\n              type=\"text\"\n              placeholder=\"Category Name\"\n              value={newCategory}\n              onChange={(e) => setNewCategory(e.target.value)}\n              className=\"w-full border border-gray-300 rounded p-2 mb-4\"\n            />\n\n            <div className=\"flex justify-end space-x-4\">\n              <button\n                onClick={() => {\n                  setIsCategoryModalOpen(false)\n                  setError(\"\")\n                }}\n                className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleAddCategory}\n                className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded\"\n              >\n                Add Category\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default AdminQuestions\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}