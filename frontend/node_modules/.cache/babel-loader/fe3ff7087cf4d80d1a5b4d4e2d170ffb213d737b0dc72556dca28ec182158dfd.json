{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder\\\\Quiz-Management-system\\\\Quiz-Management-System\\\\frontend\\\\src\\\\pages\\\\admin\\\\Questions.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from '../../components/Navbar';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminQuestions() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // For adding/editing questions\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState({\n    _id: '',\n    text: '',\n    options: ['', '', '', ''],\n    correctOption: 0,\n    categoryId: '',\n    difficulty: 'medium'\n  });\n\n  // For adding categories\n  const [isCategoryModalOpen, setIsCategoryModalOpen] = useState(false);\n  const [newCategory, setNewCategory] = useState('');\n\n  // For filtering\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const categoriesResponse = await axios.get('http://localhost:5000/api/categories', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setCategories(categoriesResponse.data);\n        const questionsResponse = await axios.get('http://localhost:5000/api/questions', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setQuestions(questionsResponse.data);\n        console.log('Categories:', categoriesResponse.data);\n        console.log('Questions:', questionsResponse.data);\n      } catch (error) {\n        setError('Failed to load data');\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddQuestion = () => {\n    setIsEditMode(false);\n    setCurrentQuestion({\n      _id: '',\n      text: '',\n      options: ['', '', '', ''],\n      correctOption: 0,\n      categoryId: categories.length > 0 ? categories[0]._id : '',\n      difficulty: 'medium'\n    });\n    setIsModalOpen(true);\n  };\n  const handleEditQuestion = async questionId => {\n    try {\n      const token = localStorage.getItem('token');\n\n      // Fetch the full question data from backend using the question ID\n      const response = await axios.get(`http://localhost:5000/api/questions/${questionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const question = response.data;\n\n      // Set the state to open modal and load question data for editing\n      setIsEditMode(true);\n      setCurrentQuestion({\n        _id: question._id,\n        text: question.text,\n        options: [...question.options],\n        correctOption: question.correctOption,\n        categoryId: question.category._id || question.category,\n        difficulty: question.difficulty\n      });\n      setIsModalOpen(true);\n      setError('');\n    } catch (error) {\n      console.error('Failed to fetch question data for editing:', error);\n      setError('Failed to load question data for editing');\n    }\n  };\n  const handleDeleteQuestion = async questionId => {\n    if (!window.confirm('Are you sure you want to delete this question?')) {\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      await axios.delete(`http://localhost:5000/api/questions/${questionId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Update questions list\n      setQuestions(questions.filter(q => q._id !== questionId));\n    } catch (error) {\n      setError('Failed to delete question');\n      console.error(error);\n    }\n  };\n  const handleSaveQuestion = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const decode = jwtDecode(token);\n      console.log(decode);\n\n      // Validate question text\n      if (!currentQuestion.text || !currentQuestion.text.trim()) {\n        return setError('Question text is required');\n      }\n\n      // Validate options\n      if (!Array.isArray(currentQuestion.options) || currentQuestion.options.length < 2 || currentQuestion.options.some(opt => !opt || !opt.trim())) {\n        return setError('All options must be filled and at least 2 options required');\n      }\n\n      // Validate categoryId (must be 24 hex chars)\n      if (!currentQuestion.categoryId || !/^[a-fA-F0-9]{24}$/.test(currentQuestion.categoryId)) {\n        return setError('Valid category is required');\n      }\n\n      // Validate correctOption\n      if (currentQuestion.correctOption === undefined || currentQuestion.correctOption === null || typeof currentQuestion.correctOption !== 'number' || currentQuestion.correctOption < 0 || currentQuestion.correctOption >= currentQuestion.options.length) {\n        return setError('Please select a valid correct option');\n      }\n\n      // If editing, validate that the question actually exists in the list\n      if (isEditMode) {\n        const exists = questions.some(q => q._id === currentQuestion._id);\n        if (!exists) {\n          return setError('Cannot edit: Question not found.');\n        }\n      }\n\n      // Prepare payload using the updated field names\n      const payload = {\n        text: currentQuestion.text.trim(),\n        options: currentQuestion.options.map(opt => opt.trim()),\n        categoryId: currentQuestion.categoryId,\n        correctOption: currentQuestion.correctOption,\n        difficulty: currentQuestion.difficulty\n      };\n      let response;\n      if (isEditMode) {\n        response = await axios.put(`http://localhost:5000/api/questions/${currentQuestion._id}`, payload, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setQuestions(questions.map(q => q._id === currentQuestion._id ? response.data : q));\n      } else {\n        response = await axios.post('http://localhost:5000/api/questions/', payload, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setQuestions([...questions, response.data]);\n      }\n      setIsModalOpen(false);\n      setError('');\n    } catch (error) {\n      var _error$response;\n      setError('Failed to save question');\n      console.error('Error saving question:', error);\n      console.error('Response:', error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    }\n  };\n  const resolveCategoryName = category => {\n    if (!category) return 'Unknown Category';\n\n    // If category is an object with a name property, return the name directly\n    if (typeof category === 'object' && category.name) {\n      return category.name;\n    }\n\n    // Otherwise, category is expected to be an ID string\n    const cat = categories.find(cat => cat._id === category);\n    return cat ? cat.name : 'Unknown Category';\n  };\n  const handleAddCategory = async () => {\n    try {\n      if (!newCategory.trim()) {\n        return setError('Category name is required');\n      }\n      // Check for duplicate category name (case-insensitive)\n      if (categories.some(cat => cat.name.toLowerCase() === newCategory.trim().toLowerCase())) {\n        return setError('Category already exists');\n      }\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5000/api/categories', {\n        name: newCategory\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Update categories list\n      setCategories([...categories, response.data]);\n      setNewCategory('');\n      setIsCategoryModalOpen(false);\n      setError('');\n    } catch (error) {\n      setError('Failed to add category');\n      console.error(error);\n    }\n  };\n  const handleOptionChange = (index, value) => {\n    const updatedOptions = [...currentQuestion.options];\n    updatedOptions[index] = value;\n    setCurrentQuestion({\n      ...currentQuestion,\n      options: updatedOptions\n    });\n  };\n\n  // Filter questions based on category and search term\n  const filteredQuestions = questions.filter(question => {\n    // If \"all\" is selected, show all questions\n    if (selectedCategory === 'all') return true;\n\n    // Find the category object from categories list\n    const selectedCategoryObj = categories.find(cat => cat._id === selectedCategory);\n    if (!selectedCategoryObj) return false; // if not found, exclude question\n\n    const selectedCategoryName = selectedCategoryObj.name;\n\n    // Get the question's category name (handle populated or id)\n    let questionCategoryName = 'Unknown Category';\n    if (typeof question.category === 'object' && question.category !== null && question.category.name) {\n      questionCategoryName = question.category.name;\n    } else if (typeof question.category === 'string') {\n      const cat = categories.find(cat => cat._id === question.category);\n      questionCategoryName = cat ? cat.name : 'Unknown Category';\n    }\n    const matchesCategory = questionCategoryName === selectedCategoryName;\n    const matchesSearch = question.text.toLowerCase().includes(searchTerm.toLowerCase());\n    return matchesCategory && matchesSearch;\n  });\n  const getDifficultyColor = difficulty => {\n    const colors = {\n      easy: 'bg-green-100 text-green-800',\n      medium: 'bg-yellow-100 text-yellow-800',\n      hard: 'bg-red-100 text-red-800'\n    };\n    return colors[difficulty] || 'bg-gray-100 text-gray-800';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: \"Loading questions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6 max-w-6xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-purple-600\",\n            children: \"Manage Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsCategoryModalOpen(true),\n              className: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n              children: \"Add Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddQuestion,\n              className: \"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n              children: \"Add Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 flex flex-col md:flex-row md:items-center md:space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 md:mb-0 md:w-1/3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              htmlFor: \"category-filter\",\n              children: \"Filter by Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"category-filter\",\n              className: \"shadow border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              value: selectedCategory,\n              onChange: e => setSelectedCategory(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"all\",\n                children: \"All Categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category._id,\n                children: category.name\n              }, category._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"md:w-2/3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              htmlFor: \"search\",\n              children: \"Search Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"search\",\n              type: \"text\",\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              placeholder: \"Search by question text...\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), filteredQuestions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-8 text-gray-500\",\n          children: \"No questions found. Add some questions to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"min-w-full bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-gray-100 text-gray-600 uppercase text-sm leading-normal\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"py-3 px-6 text-left\",\n                  children: \"Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"py-3 px-6 text-left\",\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"py-3 px-6 text-center\",\n                  children: \"Options\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"py-3 px-6 text-center\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"text-gray-600 text-sm\",\n              children: filteredQuestions.map(question => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"border-b border-gray-200 hover:bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"py-3 px-6 text-left\",\n                  children: question.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"py-3 px-6 text-left\",\n                  children: resolveCategoryName(question.category)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"py-3 px-6 text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"bg-green-100 text-green-800 py-1 px-3 rounded-full text-xs\",\n                    children: [question.options.length, \" options\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"py-3 px-6 text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex item-center justify-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleEditQuestion(question._id),\n                      className: \"transform hover:text-purple-500 hover:scale-110 mr-3\",\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDeleteQuestion(question._id),\n                      className: \"transform hover:text-red-500 hover:scale-110\",\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 23\n                }, this)]\n              }, question._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg p-6 max-w-lg w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: isEditMode ? 'Edit Question' : 'Add Question'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 mb-2 font-semibold\",\n          htmlFor: \"question-text\",\n          children: \"Question Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"question-text\",\n          className: \"w-full border border-gray-300 rounded p-2 mb-4\",\n          rows: 3,\n          value: currentQuestion.text,\n          onChange: e => setCurrentQuestion({\n            ...currentQuestion,\n            text: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 mb-2 font-semibold\",\n          htmlFor: \"category-select\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category-select\",\n          className: \"w-full border border-gray-300 rounded p-2 mb-4\",\n          value: currentQuestion.categoryId,\n          onChange: e => setCurrentQuestion({\n            ...currentQuestion,\n            categoryId: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category._id,\n            children: category.name\n          }, category._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 mb-2 font-semibold\",\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"w-full border border-gray-300 rounded p-2 mb-2\",\n            value: option,\n            onChange: e => handleOptionChange(index, e.target.value)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 mb-2 font-semibold\",\n            children: \"Correct Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full border border-gray-300 rounded p-2\",\n            value: currentQuestion.correctOption,\n            onChange: e => setCurrentQuestion({\n              ...currentQuestion,\n              correctOption: parseInt(e.target.value, 10)\n            }),\n            children: currentQuestion.options.map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: [\"Option \", index + 1]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 mb-2 font-semibold\",\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full border border-gray-300 rounded p-2\",\n            value: currentQuestion.difficulty,\n            onChange: e => setCurrentQuestion({\n              ...currentQuestion,\n              difficulty: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"easy\",\n              children: \"Easy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hard\",\n              children: \"Hard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(false),\n            className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveQuestion,\n            className: \"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 9\n    }, this), isCategoryModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg p-6 max-w-sm w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add New Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Category name\",\n          className: \"w-full border border-gray-300 rounded p-2 mb-4\",\n          value: newCategory,\n          onChange: e => setNewCategory(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCategoryModalOpen(false),\n            className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddCategory,\n            className: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminQuestions, \"L6vi0guhE00AFc9cUvD2K9NQMno=\");\n_c = AdminQuestions;\nexport default AdminQuestions;\nvar _c;\n$RefreshReg$(_c, \"AdminQuestions\");","map":{"version":3,"names":["useState","useEffect","axios","Navbar","jwtDecode","jsxDEV","_jsxDEV","AdminQuestions","_s","questions","setQuestions","categories","setCategories","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","isEditMode","setIsEditMode","currentQuestion","setCurrentQuestion","_id","text","options","correctOption","categoryId","difficulty","isCategoryModalOpen","setIsCategoryModalOpen","newCategory","setNewCategory","selectedCategory","setSelectedCategory","searchTerm","setSearchTerm","fetchData","token","localStorage","getItem","categoriesResponse","get","headers","Authorization","data","questionsResponse","console","log","handleAddQuestion","length","handleEditQuestion","questionId","response","question","category","handleDeleteQuestion","window","confirm","delete","filter","q","handleSaveQuestion","decode","trim","Array","isArray","some","opt","test","undefined","exists","payload","map","put","post","_error$response","resolveCategoryName","name","cat","find","handleAddCategory","toLowerCase","handleOptionChange","index","value","updatedOptions","filteredQuestions","selectedCategoryObj","selectedCategoryName","questionCategoryName","matchesCategory","matchesSearch","includes","getDifficultyColor","colors","easy","medium","hard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","onChange","e","target","type","placeholder","rows","disabled","option","parseInt","_","_c","$RefreshReg$"],"sources":["E:/New folder/Quiz-Management-system/Quiz-Management-System/frontend/src/pages/admin/Questions.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Navbar from '../../components/Navbar'\r\nimport { jwtDecode } from 'jwt-decode'\r\n\r\nfunction AdminQuestions() {\r\n  const [questions, setQuestions] = useState([])\r\n  const [categories, setCategories] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  // For adding/editing questions\r\n  const [isModalOpen, setIsModalOpen] = useState(false)\r\n  const [isEditMode, setIsEditMode] = useState(false)\r\n  const [currentQuestion, setCurrentQuestion] = useState({\r\n    _id: '',\r\n    text: '',\r\n    options: ['', '', '', ''],\r\n    correctOption: 0,\r\n    categoryId: '',\r\n    difficulty: 'medium',\r\n  })\r\n\r\n  // For adding categories\r\n  const [isCategoryModalOpen, setIsCategoryModalOpen] = useState(false)\r\n  const [newCategory, setNewCategory] = useState('')\r\n\r\n  // For filtering\r\n  const [selectedCategory, setSelectedCategory] = useState('all')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token')\r\n\r\n        const categoriesResponse = await axios.get(\r\n          'http://localhost:5000/api/categories',\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        setCategories(categoriesResponse.data)\r\n\r\n        const questionsResponse = await axios.get(\r\n          'http://localhost:5000/api/questions',\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        setQuestions(questionsResponse.data)\r\n\r\n        console.log('Categories:', categoriesResponse.data)\r\n        console.log('Questions:', questionsResponse.data)\r\n      } catch (error) {\r\n        setError('Failed to load data')\r\n        console.error(error)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleAddQuestion = () => {\r\n    setIsEditMode(false)\r\n    setCurrentQuestion({\r\n      _id: '',\r\n      text: '',\r\n      options: ['', '', '', ''],\r\n      correctOption: 0,\r\n      categoryId: categories.length > 0 ? categories[0]._id : '',\r\n      difficulty: 'medium',\r\n    })\r\n    setIsModalOpen(true)\r\n  }\r\n\r\n  const handleEditQuestion = async (questionId) => {\r\n    try {\r\n      const token = localStorage.getItem('token')\r\n\r\n      // Fetch the full question data from backend using the question ID\r\n      const response = await axios.get(\r\n        `http://localhost:5000/api/questions/${questionId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n\r\n      const question = response.data\r\n\r\n      // Set the state to open modal and load question data for editing\r\n      setIsEditMode(true)\r\n      setCurrentQuestion({\r\n        _id: question._id,\r\n        text: question.text,\r\n        options: [...question.options],\r\n        correctOption: question.correctOption,\r\n        categoryId: question.category._id || question.category,\r\n        difficulty: question.difficulty,\r\n      })\r\n      setIsModalOpen(true)\r\n      setError('')\r\n    } catch (error) {\r\n      console.error('Failed to fetch question data for editing:', error)\r\n      setError('Failed to load question data for editing')\r\n    }\r\n  }\r\n\r\n  const handleDeleteQuestion = async (questionId) => {\r\n    if (!window.confirm('Are you sure you want to delete this question?')) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('token')\r\n      await axios.delete(`http://localhost:5000/api/questions/${questionId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n\r\n      // Update questions list\r\n      setQuestions(questions.filter((q) => q._id !== questionId))\r\n    } catch (error) {\r\n      setError('Failed to delete question')\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const handleSaveQuestion = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token')\r\n      const decode = jwtDecode(token)\r\n      console.log(decode)\r\n\r\n      // Validate question text\r\n      if (!currentQuestion.text || !currentQuestion.text.trim()) {\r\n        return setError('Question text is required')\r\n      }\r\n\r\n      // Validate options\r\n      if (\r\n        !Array.isArray(currentQuestion.options) ||\r\n        currentQuestion.options.length < 2 ||\r\n        currentQuestion.options.some((opt) => !opt || !opt.trim())\r\n      ) {\r\n        return setError(\r\n          'All options must be filled and at least 2 options required'\r\n        )\r\n      }\r\n\r\n      // Validate categoryId (must be 24 hex chars)\r\n      if (\r\n        !currentQuestion.categoryId ||\r\n        !/^[a-fA-F0-9]{24}$/.test(currentQuestion.categoryId)\r\n      ) {\r\n        return setError('Valid category is required')\r\n      }\r\n\r\n      // Validate correctOption\r\n      if (\r\n        currentQuestion.correctOption === undefined ||\r\n        currentQuestion.correctOption === null ||\r\n        typeof currentQuestion.correctOption !== 'number' ||\r\n        currentQuestion.correctOption < 0 ||\r\n        currentQuestion.correctOption >= currentQuestion.options.length\r\n      ) {\r\n        return setError('Please select a valid correct option')\r\n      }\r\n\r\n      // If editing, validate that the question actually exists in the list\r\n      if (isEditMode) {\r\n        const exists = questions.some((q) => q._id === currentQuestion._id)\r\n        if (!exists) {\r\n          return setError('Cannot edit: Question not found.')\r\n        }\r\n      }\r\n\r\n      // Prepare payload using the updated field names\r\n      const payload = {\r\n        text: currentQuestion.text.trim(),\r\n        options: currentQuestion.options.map((opt) => opt.trim()),\r\n        categoryId: currentQuestion.categoryId,\r\n        correctOption: currentQuestion.correctOption,\r\n        difficulty: currentQuestion.difficulty,\r\n      }\r\n\r\n      let response\r\n      if (isEditMode) {\r\n        response = await axios.put(\r\n          `http://localhost:5000/api/questions/${currentQuestion._id}`,\r\n          payload,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        setQuestions(\r\n          questions.map((q) =>\r\n            q._id === currentQuestion._id ? response.data : q\r\n          )\r\n        )\r\n      } else {\r\n        response = await axios.post(\r\n          'http://localhost:5000/api/questions/',\r\n          payload,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        )\r\n        setQuestions([...questions, response.data])\r\n      }\r\n\r\n      setIsModalOpen(false)\r\n      setError('')\r\n    } catch (error) {\r\n      setError('Failed to save question')\r\n      console.error('Error saving question:', error)\r\n      console.error('Response:', error?.response?.data)\r\n    }\r\n  }\r\n\r\n  const resolveCategoryName = (category) => {\r\n    if (!category) return 'Unknown Category'\r\n\r\n    // If category is an object with a name property, return the name directly\r\n    if (typeof category === 'object' && category.name) {\r\n      return category.name\r\n    }\r\n\r\n    // Otherwise, category is expected to be an ID string\r\n    const cat = categories.find((cat) => cat._id === category)\r\n    return cat ? cat.name : 'Unknown Category'\r\n  }\r\n\r\n  const handleAddCategory = async () => {\r\n    try {\r\n      if (!newCategory.trim()) {\r\n        return setError('Category name is required')\r\n      }\r\n      // Check for duplicate category name (case-insensitive)\r\n      if (\r\n        categories.some(\r\n          (cat) => cat.name.toLowerCase() === newCategory.trim().toLowerCase()\r\n        )\r\n      ) {\r\n        return setError('Category already exists')\r\n      }\r\n\r\n      const token = localStorage.getItem('token')\r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/categories',\r\n        {\r\n          name: newCategory,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n\r\n      // Update categories list\r\n      setCategories([...categories, response.data])\r\n      setNewCategory('')\r\n      setIsCategoryModalOpen(false)\r\n      setError('')\r\n    } catch (error) {\r\n      setError('Failed to add category')\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const handleOptionChange = (index, value) => {\r\n    const updatedOptions = [...currentQuestion.options]\r\n    updatedOptions[index] = value\r\n    setCurrentQuestion({\r\n      ...currentQuestion,\r\n      options: updatedOptions,\r\n    })\r\n  }\r\n\r\n  // Filter questions based on category and search term\r\n  const filteredQuestions = questions.filter((question) => {\r\n    // If \"all\" is selected, show all questions\r\n    if (selectedCategory === 'all') return true\r\n\r\n    // Find the category object from categories list\r\n    const selectedCategoryObj = categories.find(\r\n      (cat) => cat._id === selectedCategory\r\n    )\r\n    if (!selectedCategoryObj) return false // if not found, exclude question\r\n\r\n    const selectedCategoryName = selectedCategoryObj.name\r\n\r\n    // Get the question's category name (handle populated or id)\r\n    let questionCategoryName = 'Unknown Category'\r\n    if (\r\n      typeof question.category === 'object' &&\r\n      question.category !== null &&\r\n      question.category.name\r\n    ) {\r\n      questionCategoryName = question.category.name\r\n    } else if (typeof question.category === 'string') {\r\n      const cat = categories.find((cat) => cat._id === question.category)\r\n      questionCategoryName = cat ? cat.name : 'Unknown Category'\r\n    }\r\n\r\n    const matchesCategory = questionCategoryName === selectedCategoryName\r\n    const matchesSearch = question.text\r\n      .toLowerCase()\r\n      .includes(searchTerm.toLowerCase())\r\n\r\n    return matchesCategory && matchesSearch\r\n  })\r\n\r\n  const getDifficultyColor = (difficulty) => {\r\n    const colors = {\r\n      easy: 'bg-green-100 text-green-800',\r\n      medium: 'bg-yellow-100 text-yellow-800',\r\n      hard: 'bg-red-100 text-red-800',\r\n    }\r\n    return colors[difficulty] || 'bg-gray-100 text-gray-800'\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100\">\r\n        <Navbar />\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n          <div className=\"text-center\">Loading questions...</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <Navbar />\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 max-w-6xl mx-auto\">\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <h1 className=\"text-2xl font-bold text-purple-600\">\r\n              Manage Questions\r\n            </h1>\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={() => setIsCategoryModalOpen(true)}\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n              >\r\n                Add Category\r\n              </button>\r\n              <button\r\n                onClick={handleAddQuestion}\r\n                className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n              >\r\n                Add Question\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mb-6 flex flex-col md:flex-row md:items-center md:space-x-4\">\r\n            <div className=\"mb-4 md:mb-0 md:w-1/3\">\r\n              <label\r\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                htmlFor=\"category-filter\"\r\n              >\r\n                Filter by Category\r\n              </label>\r\n              <select\r\n                id=\"category-filter\"\r\n                className=\"shadow border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                value={selectedCategory}\r\n                onChange={(e) => setSelectedCategory(e.target.value)}\r\n              >\r\n                <option value=\"all\">All Categories</option>\r\n                {categories.map((category) => (\r\n                  <option key={category._id} value={category._id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"md:w-2/3\">\r\n              <label\r\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                htmlFor=\"search\"\r\n              >\r\n                Search Questions\r\n              </label>\r\n              <input\r\n                id=\"search\"\r\n                type=\"text\"\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                placeholder=\"Search by question text...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {filteredQuestions.length === 0 ? (\r\n            <div className=\"text-center py-8 text-gray-500\">\r\n              No questions found. Add some questions to get started.\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full bg-white\">\r\n                <thead>\r\n                  <tr className=\"bg-gray-100 text-gray-600 uppercase text-sm leading-normal\">\r\n                    <th className=\"py-3 px-6 text-left\">Question</th>\r\n                    <th className=\"py-3 px-6 text-left\">Category</th>\r\n                    <th className=\"py-3 px-6 text-center\">Options</th>\r\n                    <th className=\"py-3 px-6 text-center\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"text-gray-600 text-sm\">\r\n                  {filteredQuestions.map((question) => (\r\n                    <tr\r\n                      key={question._id}\r\n                      className=\"border-b border-gray-200 hover:bg-gray-50\"\r\n                    >\r\n                      <td className=\"py-3 px-6 text-left\">{question.text}</td>\r\n                      <td className=\"py-3 px-6 text-left\">\r\n                        {resolveCategoryName(question.category)}\r\n                      </td>\r\n                      <td className=\"py-3 px-6 text-center\">\r\n                        <span className=\"bg-green-100 text-green-800 py-1 px-3 rounded-full text-xs\">\r\n                          {question.options.length} options\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"py-3 px-6 text-center\">\r\n                        <div className=\"flex item-center justify-center\">\r\n                          <button\r\n                            onClick={() => handleEditQuestion(question._id)}\r\n                            className=\"transform hover:text-purple-500 hover:scale-110 mr-3\"\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDeleteQuestion(question._id)}\r\n                            className=\"transform hover:text-red-500 hover:scale-110\"\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Question Modal */}\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 max-w-lg w-full\">\r\n            <h2 className=\"text-xl font-bold mb-4\">\r\n              {isEditMode ? 'Edit Question' : 'Add Question'}\r\n            </h2>\r\n\r\n            <label\r\n              className=\"block text-gray-700 mb-2 font-semibold\"\r\n              htmlFor=\"question-text\"\r\n            >\r\n              Question Text\r\n            </label>\r\n            <textarea\r\n              id=\"question-text\"\r\n              className=\"w-full border border-gray-300 rounded p-2 mb-4\"\r\n              rows={3}\r\n              value={currentQuestion.text}\r\n              onChange={(e) =>\r\n                setCurrentQuestion({ ...currentQuestion, text: e.target.value })\r\n              }\r\n            />\r\n\r\n            <label\r\n              className=\"block text-gray-700 mb-2 font-semibold\"\r\n              htmlFor=\"category-select\"\r\n            >\r\n              Category\r\n            </label>\r\n            <select\r\n              id=\"category-select\"\r\n              className=\"w-full border border-gray-300 rounded p-2 mb-4\"\r\n              value={currentQuestion.categoryId}\r\n              onChange={(e) =>\r\n                setCurrentQuestion({\r\n                  ...currentQuestion,\r\n                  categoryId: e.target.value,\r\n                })\r\n              }\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Category\r\n              </option>\r\n              {categories.map((category) => (\r\n                <option key={category._id} value={category._id}>\r\n                  {category.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-gray-700 mb-2 font-semibold\">\r\n                Options\r\n              </label>\r\n              {currentQuestion.options.map((option, index) => (\r\n                <input\r\n                  key={index}\r\n                  type=\"text\"\r\n                  className=\"w-full border border-gray-300 rounded p-2 mb-2\"\r\n                  value={option}\r\n                  onChange={(e) => handleOptionChange(index, e.target.value)}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-gray-700 mb-2 font-semibold\">\r\n                Correct Option\r\n              </label>\r\n              <select\r\n                className=\"w-full border border-gray-300 rounded p-2\"\r\n                value={currentQuestion.correctOption}\r\n                onChange={(e) =>\r\n                  setCurrentQuestion({\r\n                    ...currentQuestion,\r\n                    correctOption: parseInt(e.target.value, 10),\r\n                  })\r\n                }\r\n              >\r\n                {currentQuestion.options.map((_, index) => (\r\n                  <option key={index} value={index}>\r\n                    Option {index + 1}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-gray-700 mb-2 font-semibold\">\r\n                Difficulty\r\n              </label>\r\n              <select\r\n                className=\"w-full border border-gray-300 rounded p-2\"\r\n                value={currentQuestion.difficulty}\r\n                onChange={(e) =>\r\n                  setCurrentQuestion({\r\n                    ...currentQuestion,\r\n                    difficulty: e.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <option value=\"easy\">Easy</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"hard\">Hard</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button\r\n                onClick={() => setIsModalOpen(false)}\r\n                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleSaveQuestion}\r\n                className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Add Category Modal */}\r\n      {isCategoryModalOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 max-w-sm w-full\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Add New Category</h2>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Category name\"\r\n              className=\"w-full border border-gray-300 rounded p-2 mb-4\"\r\n              value={newCategory}\r\n              onChange={(e) => setNewCategory(e.target.value)}\r\n            />\r\n\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button\r\n                onClick={() => setIsCategoryModalOpen(false)}\r\n                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleAddCategory}\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n              >\r\n                Add Category\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminQuestions\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}