{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder\\\\Quiz-Management-system\\\\Quiz-Management-System\\\\frontend\\\\src\\\\pages\\\\player\\\\Quiz.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation, useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport axios from '../../utils/axiosConfig';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { toast } from 'react-toastify';\n\n// ✅ Internal Navbar Component (with disable logic)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Navbar({\n  disableNav,\n  timeLeft\n}) {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n  const handleNavClick = (e, to) => {\n    if (disableNav) {\n      e.preventDefault();\n      alert('You cannot navigate away during the quiz.');\n    } else {\n      navigate(to);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"bg-purple-700 text-white shadow-md\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center py-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: (user === null || user === void 0 ? void 0 : user.role) === 'admin' ? '/admin/dashboard' : '/player/dashboard',\n            onClick: e => handleNavClick(e, (user === null || user === void 0 ? void 0 : user.role) === 'admin' ? '/admin/dashboard' : '/player/dashboard'),\n            className: \"text-xl font-bold\",\n            children: \"Quiz Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), timeLeft !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-semibold tracking-wider\",\n          children: [\"\\u23F1\\uFE0F \", formatTime(timeLeft)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-6\",\n          children: [user.role === 'player' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/player/dashboard\",\n              onClick: e => handleNavClick(e, '/player/dashboard'),\n              className: \"hover:text-purple-200\",\n              children: \"Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/player/history\",\n              onClick: e => handleNavClick(e, '/player/history'),\n              className: \"hover:text-purple-200\",\n              children: \"My History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/admin/dashboard\",\n              onClick: e => handleNavClick(e, '/admin/dashboard'),\n              className: \"hover:text-purple-200\",\n              children: \"Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/admin/questions\",\n              onClick: e => handleNavClick(e, '/admin/questions'),\n              className: \"hover:text-purple-200\",\n              children: \"Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/admin/leaderboard\",\n              onClick: e => handleNavClick(e, '/admin/leaderboard'),\n              className: \"hover:text-purple-200\",\n              children: \"Leaderboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/admin/players\",\n              onClick: e => handleNavClick(e, '/admin/players'),\n              className: \"hover:text-purple-200\",\n              children: \"Players\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleLogout,\n              className: \"bg-purple-800 hover:bg-purple-900 text-white text-sm py-1 px-3 rounded\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"owExUWFylk0vVlQUKU4QcBpCg7Y=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Navbar;\nfunction Quiz() {\n  _s2();\n  var _questions$, _questions$$category;\n  const {\n    categoryId\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const difficulty = searchParams.get('difficulty') || 'medium';\n  const count = parseInt(searchParams.get('count')) || 10;\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const mounted = useRef(true);\n  const [questions, setQuestions] = useState([]);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [quizSubmitted, setQuizSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [stats, setStats] = useState({\n    easy: {\n      correct: 0,\n      total: 0\n    },\n    medium: {\n      correct: 0,\n      total: 0\n    },\n    hard: {\n      correct: 0,\n      total: 0\n    }\n  });\n\n  // 🕑 TIMER STATE\n  const QUIZ_TOTAL_DURATION = 90; // 1 minute 30 seconds\n  const [timeLeft, setTimeLeft] = useState(QUIZ_TOTAL_DURATION);\n\n  // Keep latest handleSubmit ref to avoid stale closure inside timer\n  const submitRef = useRef(null);\n  useEffect(() => {\n    submitRef.current = handleSubmit;\n  });\n\n  // Cleanup flag\n  useEffect(() => {\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  // ⏲️ Start countdown when questions arrive\n  useEffect(() => {\n    if (loading) return; // wait until loaded\n    if (quizSubmitted) return; // stop when submitted\n\n    const interval = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(interval);\n          if (!quizSubmitted && submitRef.current) {\n            toast.info('Time is up! Submitting your quiz...');\n            submitRef.current(true); // force submit\n          }\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [loading, quizSubmitted]);\n  useEffect(() => {\n    if (!categoryId || !user) {\n      navigate('/player/dashboard');\n      return;\n    }\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.post(`/api/quiz/questions`, {\n          categoryId,\n          difficulty,\n          count\n        });\n        if (!mounted.current) return;\n        if (!response.data || response.data.length === 0) {\n          throw new Error('No questions available for this category and difficulty');\n        }\n        setQuestions(response.data);\n        setError('');\n      } catch (err) {\n        var _err$response, _err$response$data, _err$response2;\n        if (!mounted.current) return;\n        const message = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message;\n        setError(message);\n        toast.error(message);\n        if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n          navigate('/login');\n        } else {\n          navigate('/player/dashboard');\n        }\n      } finally {\n        if (mounted.current) {\n          setLoading(false);\n        }\n      }\n    };\n    fetchData();\n  }, [categoryId, difficulty, count, navigate, user]);\n  const calculatePoints = difficulty => {\n    switch (difficulty) {\n      case 'easy':\n        return 1;\n      case 'medium':\n        return 2;\n      case 'hard':\n        return 3;\n      default:\n        return 1;\n    }\n  };\n  const handleAnswer = (questionId, selectedOption) => {\n    setUserAnswers(prev => ({\n      ...prev,\n      [questionId]: selectedOption\n    }));\n  };\n  const handleSubmit = async (force = false) => {\n    if (quizSubmitted) return; // prevent double submit\n\n    // Check if all questions are answered\n    const unansweredCount = questions.length - Object.keys(userAnswers).length;\n    if (unansweredCount > 0 && !force) {\n      toast.warning(`Please answer all questions. ${unansweredCount} remaining.`);\n      return;\n    }\n    try {\n      // Calculate score and stats\n      let totalScore = 0;\n      const newStats = {\n        easy: {\n          correct: 0,\n          total: 0\n        },\n        medium: {\n          correct: 0,\n          total: 0\n        },\n        hard: {\n          correct: 0,\n          total: 0\n        }\n      };\n      const formattedAnswers = questions.map(question => {\n        const selectedOption = userAnswers[question._id];\n        const isCorrect = selectedOption === question.correctOption;\n        const points = isCorrect ? calculatePoints(question.difficulty) : 0;\n        totalScore += points;\n\n        // Update stats\n        newStats[question.difficulty].total += 1;\n        if (isCorrect) {\n          newStats[question.difficulty].correct += 1;\n        }\n        return {\n          questionId: question._id,\n          selectedOption,\n          isCorrect,\n          points,\n          difficulty: question.difficulty\n        };\n      });\n\n      // Submit to backend\n      await axios.post('/api/quiz/submit', {\n        categoryId,\n        answers: formattedAnswers,\n        score: totalScore,\n        stats: newStats\n      });\n      setScore(totalScore);\n      setStats(newStats);\n      setQuizSubmitted(true);\n      toast.success('Quiz submitted successfully!');\n    } catch (error) {\n      toast.error('Failed to submit quiz. Please try again.');\n      console.error(error);\n    }\n  };\n  const getDifficultyColor = difficulty => {\n    switch (difficulty) {\n      case 'easy':\n        return 'text-green-600';\n      case 'medium':\n        return 'text-yellow-600';\n      case 'hard':\n        return 'text-red-600';\n      default:\n        return 'text-gray-600';\n    }\n  };\n  const getOptionStyle = (question, optionValue) => {\n    if (!quizSubmitted) {\n      return userAnswers[question._id] === optionValue ? 'bg-blue-100 border-blue-500' : 'hover:bg-gray-50';\n    }\n\n    // After submission\n    const isCorrect = question.correctOption === optionValue;\n    const wasSelected = userAnswers[question._id] === optionValue;\n    if (isCorrect && wasSelected) {\n      return 'bg-green-100 border-green-500'; // Correct answer and user selected it\n    }\n    if (isCorrect) {\n      return 'bg-green-100 border-green-500 ring-2 ring-green-500'; // Correct answer but user didn't select it\n    }\n    if (wasSelected) {\n      return 'bg-red-100 border-red-500'; // User selected wrong answer\n    }\n    return 'opacity-50'; // Neither correct nor selected\n  };\n  const getOptionLabel = (question, optionValue) => {\n    if (!quizSubmitted) return null;\n    const isCorrect = question.correctOption === optionValue;\n    const wasSelected = userAnswers[question._id] === optionValue;\n    if (isCorrect && wasSelected) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-green-600 text-sm\",\n        children: \"\\u2713 Correct answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this);\n    }\n    if (isCorrect) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-green-600 text-sm\",\n        children: \"\\u2713 Correct answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this);\n    }\n    if (wasSelected) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-red-600 text-sm\",\n        children: \"\\u2717 Your answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        disableNav: true,\n        timeLeft: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: \"Loading questions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        disableNav: true,\n        timeLeft: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      disableNav: !quizSubmitted,\n      timeLeft: quizSubmitted ? null : timeLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-gray-800\",\n              children: [\"Quiz - \", (_questions$ = questions[0]) === null || _questions$ === void 0 ? void 0 : (_questions$$category = _questions$.category) === null || _questions$$category === void 0 ? void 0 : _questions$$category.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600 mt-1\",\n              children: [count, \" Questions -\", ' ', difficulty.charAt(0).toUpperCase() + difficulty.slice(1), ' ', \"Difficulty\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `font-semibold ${getDifficultyColor(difficulty)}`,\n            children: difficulty.charAt(0).toUpperCase() + difficulty.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), quizSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 p-4 bg-gray-50 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-2\",\n            children: \"Quiz Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg mb-2\",\n            children: [\"Total Score: \", score, \" points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n            children: Object.entries(stats).map(([diff, stat]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-3 rounded-lg ${diff === 'easy' ? 'bg-green-50' : diff === 'medium' ? 'bg-yellow-50' : 'bg-red-50'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: `font-medium ${getDifficultyColor(diff)}`,\n                children: diff.charAt(0).toUpperCase() + diff.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm\",\n                children: [stat.correct, \"/\", stat.total, \" correct (\", Math.round(stat.correct / stat.total * 100) || 0, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this)]\n            }, diff, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border rounded-lg hover:shadow-sm transition-shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-lg font-medium\",\n                children: [index + 1, \". \", question.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-2 py-1 rounded-full text-sm ${getDifficultyColor(question.difficulty)} bg-opacity-10`,\n                children: question.difficulty.charAt(0).toUpperCase() + question.difficulty.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => !quizSubmitted && handleAnswer(question._id, option),\n                  className: `flex-grow text-left p-3 border rounded-md transition-colors ${getOptionStyle(question, option)}`,\n                  disabled: quizSubmitted,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"flex items-center justify-between\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: option\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 27\n                    }, this), getOptionLabel(question, option)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 23\n                }, this)\n              }, optionIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), quizSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 text-sm\",\n              children: userAnswers[question._id] === undefined ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-yellow-600\",\n                children: [\"You did not answer this question. The correct answer was: \", question.correctOption]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 23\n              }, this) : userAnswers[question._id] === question.correctOption ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-green-600\",\n                children: [\"\\u2713 Correct! You earned\", ' ', calculatePoints(question.difficulty), \" points\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-600\",\n                children: [\"\\u2717 Incorrect. The correct answer was:\", ' ', question.correctOption]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 19\n            }, this)]\n          }, question._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), !quizSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSubmit(true) // Force submit\n            ,\n            className: \"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\",\n            children: \"Submit Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this), quizSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/player/dashboard'),\n            className: \"w-full bg-gray-600 text-white py-2 px-4 rounded-md hover:bg-gray-700 transition-colors\",\n            children: \"Back to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n}\n_s2(Quiz, \"RdW3A0B40bGqS9nOa3IKfR/LRFc=\", false, function () {\n  return [useParams, useSearchParams, useNavigate, useAuth];\n});\n_c2 = Quiz;\nexport default Quiz;\nvar _c, _c2;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"Quiz\");","map":{"version":3,"names":["useState","useEffect","useRef","Link","useLocation","useNavigate","useParams","useSearchParams","axios","useAuth","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","disableNav","timeLeft","_s","user","logout","navigate","handleLogout","handleNavClick","e","to","preventDefault","alert","formatTime","seconds","mins","Math","floor","secs","toString","padStart","className","children","role","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","Quiz","_s2","_questions$","_questions$$category","categoryId","searchParams","difficulty","get","count","parseInt","mounted","questions","setQuestions","userAnswers","setUserAnswers","loading","setLoading","error","setError","quizSubmitted","setQuizSubmitted","score","setScore","stats","setStats","easy","correct","total","medium","hard","QUIZ_TOTAL_DURATION","setTimeLeft","submitRef","current","handleSubmit","interval","setInterval","prev","clearInterval","info","fetchData","response","post","data","length","Error","err","_err$response","_err$response$data","_err$response2","message","status","calculatePoints","handleAnswer","questionId","selectedOption","force","unansweredCount","Object","keys","warning","totalScore","newStats","formattedAnswers","map","question","_id","isCorrect","correctOption","points","answers","success","console","getDifficultyColor","getOptionStyle","optionValue","wasSelected","getOptionLabel","category","charAt","toUpperCase","slice","entries","diff","stat","round","index","text","options","option","optionIndex","disabled","undefined","_c2","$RefreshReg$"],"sources":["E:/New folder/Quiz-Management-system/Quiz-Management-System/frontend/src/pages/player/Quiz.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\r\nimport {\r\n  Link,\r\n  useLocation,\r\n  useNavigate,\r\n  useParams,\r\n  useSearchParams,\r\n} from 'react-router-dom'\r\nimport axios from '../../utils/axiosConfig'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { toast } from 'react-toastify'\r\n\r\n// ✅ Internal Navbar Component (with disable logic)\r\nfunction Navbar({ disableNav, timeLeft }) {\r\n  const { user, logout } = useAuth()\r\n  const navigate = useNavigate()\r\n\r\n  const handleLogout = () => {\r\n    logout()\r\n    navigate('/login')\r\n  }\r\n\r\n  const handleNavClick = (e, to) => {\r\n    if (disableNav) {\r\n      e.preventDefault()\r\n      alert('You cannot navigate away during the quiz.')\r\n    } else {\r\n      navigate(to)\r\n    }\r\n  }\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60)\r\n    const secs = seconds % 60\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`\r\n  }\r\n\r\n  return (\r\n    <nav className=\"bg-purple-700 text-white shadow-md\">\r\n      <div className=\"container mx-auto px-4\">\r\n        <div className=\"flex justify-between items-center py-4\">\r\n          <div className=\"flex items-center\">\r\n            <Link\r\n              to={\r\n                user?.role === 'admin'\r\n                  ? '/admin/dashboard'\r\n                  : '/player/dashboard'\r\n              }\r\n              onClick={(e) =>\r\n                handleNavClick(\r\n                  e,\r\n                  user?.role === 'admin'\r\n                    ? '/admin/dashboard'\r\n                    : '/player/dashboard'\r\n                )\r\n              }\r\n              className=\"text-xl font-bold\"\r\n            >\r\n              Quiz Game\r\n            </Link>\r\n          </div>\r\n\r\n          {/* ⏲️ Timer visible during quiz */}\r\n          {timeLeft !== null && (\r\n            <div className=\"text-lg font-semibold tracking-wider\">\r\n              ⏱️ {formatTime(timeLeft)}\r\n            </div>\r\n          )}\r\n\r\n          {user && (\r\n            <div className=\"flex items-center space-x-6\">\r\n              {user.role === 'player' ? (\r\n                <>\r\n                  <Link\r\n                    to=\"/player/dashboard\"\r\n                    onClick={(e) => handleNavClick(e, '/player/dashboard')}\r\n                    className=\"hover:text-purple-200\"\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    to=\"/player/history\"\r\n                    onClick={(e) => handleNavClick(e, '/player/history')}\r\n                    className=\"hover:text-purple-200\"\r\n                  >\r\n                    My History\r\n                  </Link>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Link\r\n                    to=\"/admin/dashboard\"\r\n                    onClick={(e) => handleNavClick(e, '/admin/dashboard')}\r\n                    className=\"hover:text-purple-200\"\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    to=\"/admin/questions\"\r\n                    onClick={(e) => handleNavClick(e, '/admin/questions')}\r\n                    className=\"hover:text-purple-200\"\r\n                  >\r\n                    Questions\r\n                  </Link>\r\n                  <Link\r\n                    to=\"/admin/leaderboard\"\r\n                    onClick={(e) => handleNavClick(e, '/admin/leaderboard')}\r\n                    className=\"hover:text-purple-200\"\r\n                  >\r\n                    Leaderboard\r\n                  </Link>\r\n                  <Link\r\n                    to=\"/admin/players\"\r\n                    onClick={(e) => handleNavClick(e, '/admin/players')}\r\n                    className=\"hover:text-purple-200\"\r\n                  >\r\n                    Players\r\n                  </Link>\r\n                </>\r\n              )}\r\n\r\n              <div className=\"flex items-center space-x-2\">\r\n                <span className=\"text-sm\">{user.name}</span>\r\n                <button\r\n                  onClick={handleLogout}\r\n                  className=\"bg-purple-800 hover:bg-purple-900 text-white text-sm py-1 px-3 rounded\"\r\n                >\r\n                  Logout\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nfunction Quiz() {\r\n  const { categoryId } = useParams()\r\n  const [searchParams] = useSearchParams()\r\n  const difficulty = searchParams.get('difficulty') || 'medium'\r\n  const count = parseInt(searchParams.get('count')) || 10\r\n  const navigate = useNavigate()\r\n  const { user } = useAuth()\r\n  const mounted = useRef(true)\r\n\r\n  const [questions, setQuestions] = useState([])\r\n  const [userAnswers, setUserAnswers] = useState({})\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState('')\r\n  const [quizSubmitted, setQuizSubmitted] = useState(false)\r\n  const [score, setScore] = useState(0)\r\n  const [stats, setStats] = useState({\r\n    easy: { correct: 0, total: 0 },\r\n    medium: { correct: 0, total: 0 },\r\n    hard: { correct: 0, total: 0 },\r\n  })\r\n\r\n  // 🕑 TIMER STATE\r\n  const QUIZ_TOTAL_DURATION = 90 // 1 minute 30 seconds\r\n  const [timeLeft, setTimeLeft] = useState(QUIZ_TOTAL_DURATION)\r\n\r\n  // Keep latest handleSubmit ref to avoid stale closure inside timer\r\n  const submitRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    submitRef.current = handleSubmit\r\n  })\r\n\r\n  // Cleanup flag\r\n  useEffect(() => {\r\n    return () => {\r\n      mounted.current = false\r\n    }\r\n  }, [])\r\n\r\n  // ⏲️ Start countdown when questions arrive\r\n  useEffect(() => {\r\n    if (loading) return // wait until loaded\r\n    if (quizSubmitted) return // stop when submitted\r\n\r\n    const interval = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(interval)\r\n          if (!quizSubmitted && submitRef.current) {\r\n            toast.info('Time is up! Submitting your quiz...')\r\n            submitRef.current(true) // force submit\r\n          }\r\n          return 0\r\n        }\r\n        return prev - 1\r\n      })\r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [loading, quizSubmitted])\r\n\r\n  useEffect(() => {\r\n    if (!categoryId || !user) {\r\n      navigate('/player/dashboard')\r\n      return\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const response = await axios.post(`/api/quiz/questions`, {\r\n          categoryId,\r\n          difficulty,\r\n          count,\r\n        })\r\n\r\n        if (!mounted.current) return\r\n\r\n        if (!response.data || response.data.length === 0) {\r\n          throw new Error(\r\n            'No questions available for this category and difficulty'\r\n          )\r\n        }\r\n\r\n        setQuestions(response.data)\r\n        setError('')\r\n      } catch (err) {\r\n        if (!mounted.current) return\r\n        const message = err.response?.data?.message || err.message\r\n        setError(message)\r\n        toast.error(message)\r\n        if (err.response?.status === 401) {\r\n          navigate('/login')\r\n        } else {\r\n          navigate('/player/dashboard')\r\n        }\r\n      } finally {\r\n        if (mounted.current) {\r\n          setLoading(false)\r\n        }\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [categoryId, difficulty, count, navigate, user])\r\n\r\n  const calculatePoints = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy':\r\n        return 1\r\n      case 'medium':\r\n        return 2\r\n      case 'hard':\r\n        return 3\r\n      default:\r\n        return 1\r\n    }\r\n  }\r\n\r\n  const handleAnswer = (questionId, selectedOption) => {\r\n    setUserAnswers((prev) => ({\r\n      ...prev,\r\n      [questionId]: selectedOption,\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async (force = false) => {\r\n    if (quizSubmitted) return // prevent double submit\r\n\r\n    // Check if all questions are answered\r\n    const unansweredCount = questions.length - Object.keys(userAnswers).length\r\n    if (unansweredCount > 0 && !force) {\r\n      toast.warning(\r\n        `Please answer all questions. ${unansweredCount} remaining.`\r\n      )\r\n      return\r\n    }\r\n\r\n    try {\r\n      // Calculate score and stats\r\n      let totalScore = 0\r\n      const newStats = {\r\n        easy: { correct: 0, total: 0 },\r\n        medium: { correct: 0, total: 0 },\r\n        hard: { correct: 0, total: 0 },\r\n      }\r\n\r\n      const formattedAnswers = questions.map((question) => {\r\n        const selectedOption = userAnswers[question._id]\r\n        const isCorrect = selectedOption === question.correctOption\r\n        const points = isCorrect ? calculatePoints(question.difficulty) : 0\r\n        totalScore += points\r\n\r\n        // Update stats\r\n        newStats[question.difficulty].total += 1\r\n        if (isCorrect) {\r\n          newStats[question.difficulty].correct += 1\r\n        }\r\n\r\n        return {\r\n          questionId: question._id,\r\n          selectedOption,\r\n          isCorrect,\r\n          points,\r\n          difficulty: question.difficulty,\r\n        }\r\n      })\r\n\r\n      // Submit to backend\r\n      await axios.post('/api/quiz/submit', {\r\n        categoryId,\r\n        answers: formattedAnswers,\r\n        score: totalScore,\r\n        stats: newStats,\r\n      })\r\n\r\n      setScore(totalScore)\r\n      setStats(newStats)\r\n      setQuizSubmitted(true)\r\n      toast.success('Quiz submitted successfully!')\r\n    } catch (error) {\r\n      toast.error('Failed to submit quiz. Please try again.')\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const getDifficultyColor = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy':\r\n        return 'text-green-600'\r\n      case 'medium':\r\n        return 'text-yellow-600'\r\n      case 'hard':\r\n        return 'text-red-600'\r\n      default:\r\n        return 'text-gray-600'\r\n    }\r\n  }\r\n\r\n  const getOptionStyle = (question, optionValue) => {\r\n    if (!quizSubmitted) {\r\n      return userAnswers[question._id] === optionValue\r\n        ? 'bg-blue-100 border-blue-500'\r\n        : 'hover:bg-gray-50'\r\n    }\r\n\r\n    // After submission\r\n    const isCorrect = question.correctOption === optionValue\r\n    const wasSelected = userAnswers[question._id] === optionValue\r\n\r\n    if (isCorrect && wasSelected) {\r\n      return 'bg-green-100 border-green-500' // Correct answer and user selected it\r\n    }\r\n    if (isCorrect) {\r\n      return 'bg-green-100 border-green-500 ring-2 ring-green-500' // Correct answer but user didn't select it\r\n    }\r\n    if (wasSelected) {\r\n      return 'bg-red-100 border-red-500' // User selected wrong answer\r\n    }\r\n    return 'opacity-50' // Neither correct nor selected\r\n  }\r\n\r\n  const getOptionLabel = (question, optionValue) => {\r\n    if (!quizSubmitted) return null\r\n\r\n    const isCorrect = question.correctOption === optionValue\r\n    const wasSelected = userAnswers[question._id] === optionValue\r\n\r\n    if (isCorrect && wasSelected) {\r\n      return (\r\n        <span className=\"ml-2 text-green-600 text-sm\">✓ Correct answer</span>\r\n      )\r\n    }\r\n    if (isCorrect) {\r\n      return (\r\n        <span className=\"ml-2 text-green-600 text-sm\">✓ Correct answer</span>\r\n      )\r\n    }\r\n    if (wasSelected) {\r\n      return <span className=\"ml-2 text-red-600 text-sm\">✗ Your answer</span>\r\n    }\r\n    return null\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100\">\r\n        <Navbar disableNav={true} timeLeft={null} />\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n          <div className=\"text-center\">Loading questions...</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100\">\r\n        <Navbar disableNav={true} timeLeft={null} />\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <Navbar\r\n        disableNav={!quizSubmitted}\r\n        timeLeft={quizSubmitted ? null : timeLeft}\r\n      />\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold text-gray-800\">\r\n                Quiz - {questions[0]?.category?.name}\r\n              </h1>\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                {count} Questions -{' '}\r\n                {difficulty.charAt(0).toUpperCase() + difficulty.slice(1)}{' '}\r\n                Difficulty\r\n              </p>\r\n            </div>\r\n            <span className={`font-semibold ${getDifficultyColor(difficulty)}`}>\r\n              {difficulty.charAt(0).toUpperCase() + difficulty.slice(1)}\r\n            </span>\r\n          </div>\r\n\r\n          {quizSubmitted && (\r\n            <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n              <h2 className=\"text-xl font-bold mb-2\">Quiz Results</h2>\r\n              <p className=\"text-lg mb-2\">Total Score: {score} points</p>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                {Object.entries(stats).map(([diff, stat]) => (\r\n                  <div\r\n                    key={diff}\r\n                    className={`p-3 rounded-lg ${\r\n                      diff === 'easy'\r\n                        ? 'bg-green-50'\r\n                        : diff === 'medium'\r\n                        ? 'bg-yellow-50'\r\n                        : 'bg-red-50'\r\n                    }`}\r\n                  >\r\n                    <p className={`font-medium ${getDifficultyColor(diff)}`}>\r\n                      {diff.charAt(0).toUpperCase() + diff.slice(1)}\r\n                    </p>\r\n                    <p className=\"text-sm\">\r\n                      {stat.correct}/{stat.total} correct (\r\n                      {Math.round((stat.correct / stat.total) * 100) || 0}%)\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"space-y-6\">\r\n            {questions.map((question, index) => (\r\n              <div\r\n                key={question._id}\r\n                className=\"p-4 border rounded-lg hover:shadow-sm transition-shadow\"\r\n              >\r\n                <div className=\"flex justify-between items-start mb-4\">\r\n                  <p className=\"text-lg font-medium\">\r\n                    {index + 1}. {question.text}\r\n                  </p>\r\n                  <span\r\n                    className={`px-2 py-1 rounded-full text-sm ${getDifficultyColor(\r\n                      question.difficulty\r\n                    )} bg-opacity-10`}\r\n                  >\r\n                    {question.difficulty.charAt(0).toUpperCase() +\r\n                      question.difficulty.slice(1)}\r\n                  </span>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  {question.options.map((option, optionIndex) => (\r\n                    <div\r\n                      key={optionIndex}\r\n                      className=\"flex items-center justify-between\"\r\n                    >\r\n                      <button\r\n                        onClick={() =>\r\n                          !quizSubmitted && handleAnswer(question._id, option)\r\n                        }\r\n                        className={`flex-grow text-left p-3 border rounded-md transition-colors ${getOptionStyle(\r\n                          question,\r\n                          option\r\n                        )}`}\r\n                        disabled={quizSubmitted}\r\n                      >\r\n                        <span className=\"flex items-center justify-between\">\r\n                          <span>{option}</span>\r\n                          {getOptionLabel(question, option)}\r\n                        </span>\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                {quizSubmitted && (\r\n                  <div className=\"mt-3 text-sm\">\r\n                    {userAnswers[question._id] === undefined ? (\r\n                      <p className=\"text-yellow-600\">\r\n                        You did not answer this question. The correct answer\r\n                        was: {question.correctOption}\r\n                      </p>\r\n                    ) : userAnswers[question._id] === question.correctOption ? (\r\n                      <p className=\"text-green-600\">\r\n                        ✓ Correct! You earned{' '}\r\n                        {calculatePoints(question.difficulty)} points\r\n                      </p>\r\n                    ) : (\r\n                      <p className=\"text-red-600\">\r\n                        ✗ Incorrect. The correct answer was:{' '}\r\n                        {question.correctOption}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {!quizSubmitted && (\r\n            <div className=\"mt-6\">\r\n              <button\r\n                onClick={() => handleSubmit(true)} // Force submit\r\n                className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\"\r\n              >\r\n                Submit Quiz\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {quizSubmitted && (\r\n            <div className=\"mt-6\">\r\n              <button\r\n                onClick={() => navigate('/player/dashboard')}\r\n                className=\"w-full bg-gray-600 text-white py-2 px-4 rounded-md hover:bg-gray-700 transition-colors\"\r\n              >\r\n                Back to Dashboard\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quiz\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}