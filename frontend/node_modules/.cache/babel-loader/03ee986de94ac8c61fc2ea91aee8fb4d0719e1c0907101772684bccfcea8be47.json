{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder\\\\Quiz-Management-system\\\\Quiz-Management-System\\\\frontend\\\\src\\\\pages\\\\player\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport axios from '../../utils/axiosConfig';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { toast } from 'react-toastify';\nimport Navbar from './Navbar'; // Assuming you have a Navbar component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  var _questions$, _questions$$category;\n  const {\n    categoryId\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const difficulty = searchParams.get('difficulty') || 'medium';\n  const count = parseInt(searchParams.get('count')) || 10;\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [questions, setQuestions] = useState([]);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [quizSubmitted, setQuizSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [stats, setStats] = useState({\n    easy: {\n      correct: 0,\n      total: 0\n    },\n    medium: {\n      correct: 0,\n      total: 0\n    },\n    hard: {\n      correct: 0,\n      total: 0\n    }\n  });\n\n  // Timer configuration (1 minute 30 seconds)\n  const QUIZ_DURATION = 90;\n  const [timeLeft, setTimeLeft] = useState(QUIZ_DURATION);\n  const timerRef = useRef(null);\n\n  // Fetch questions on mount\n  useEffect(() => {\n    if (!categoryId || !user) {\n      navigate('/player/dashboard');\n      return;\n    }\n    const fetchQuestions = async () => {\n      try {\n        var _response$data;\n        setLoading(true);\n        const response = await axios.post('/api/quiz/questions', {\n          categoryId,\n          difficulty,\n          count\n        });\n        if (!((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.length)) {\n          throw new Error('No questions available');\n        }\n        setQuestions(response.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message);\n        toast.error('Failed to load questions');\n        navigate('/player/dashboard');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [categoryId, difficulty, count, navigate, user]);\n\n  // Timer logic\n  useEffect(() => {\n    if (loading || quizSubmitted) return;\n    timerRef.current = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timerRef.current);\n          handleTimeUp();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [loading, quizSubmitted]);\n  const handleTimeUp = async () => {\n    toast.info('Time is up! Your answers are being submitted...');\n    await submitQuiz(true);\n  };\n  const calculatePoints = difficulty => {\n    const points = {\n      easy: 1,\n      medium: 2,\n      hard: 3\n    };\n    return points[difficulty] || 1;\n  };\n  const handleAnswer = (questionId, selectedOption) => {\n    if (!quizSubmitted) {\n      setUserAnswers(prev => ({\n        ...prev,\n        [questionId]: selectedOption\n      }));\n    }\n  };\n  const submitQuiz = async (isTimeUp = false) => {\n    if (quizSubmitted) return;\n    try {\n      // Calculate results\n      let totalScore = 0;\n      const newStats = {\n        easy: {\n          correct: 0,\n          total: 0\n        },\n        medium: {\n          correct: 0,\n          total: 0\n        },\n        hard: {\n          correct: 0,\n          total: 0\n        }\n      };\n      questions.forEach(question => {\n        const selectedOption = userAnswers[question._id];\n        const isCorrect = selectedOption === question.correctOption;\n        const points = isCorrect ? calculatePoints(question.difficulty) : 0;\n        totalScore += points;\n        newStats[question.difficulty].total += 1;\n        if (isCorrect) newStats[question.difficulty].correct += 1;\n      });\n\n      // Submit to backend (only if not time-up)\n      if (!isTimeUp) {\n        await axios.post('/api/quiz/submit', {\n          categoryId,\n          answers: questions.map(question => ({\n            questionId: question._id,\n            selectedOption: userAnswers[question._id] || null,\n            isCorrect: userAnswers[question._id] === question.correctOption,\n            points: userAnswers[question._id] === question.correctOption ? calculatePoints(question.difficulty) : 0,\n            difficulty: question.difficulty\n          })),\n          score: totalScore,\n          stats: newStats\n        });\n      }\n      setScore(totalScore);\n      setStats(newStats);\n      setQuizSubmitted(true);\n      if (!isTimeUp) {\n        toast.success('Quiz submitted successfully!');\n      }\n    } catch (error) {\n      toast.error('Failed to submit quiz');\n      console.error('Quiz submission error:', error);\n    }\n  };\n  const getDifficultyColor = difficulty => {\n    const colors = {\n      easy: 'text-green-600',\n      medium: 'text-yellow-600',\n      hard: 'text-red-600'\n    };\n    return colors[difficulty] || 'text-gray-600';\n  };\n  const getOptionClasses = (question, option) => {\n    if (!quizSubmitted) {\n      return userAnswers[question._id] === option ? 'bg-blue-100 border-blue-500' : 'hover:bg-gray-50';\n    }\n    const isCorrect = option === question.correctOption;\n    const wasSelected = userAnswers[question._id] === option;\n    if (isCorrect) {\n      return 'bg-green-100 border-green-500';\n    }\n    if (wasSelected) {\n      return 'bg-red-100 border-red-500';\n    }\n    return 'bg-gray-50';\n  };\n  const getOptionLabel = (question, option) => {\n    if (!quizSubmitted) return null;\n    const isCorrect = option === question.correctOption;\n    const wasSelected = userAnswers[question._id] === option;\n    if (isCorrect) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-green-600 text-sm\",\n        children: \"\\u2713 Correct answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this);\n    }\n    if (wasSelected) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-red-600 text-sm\",\n        children: \"\\u2717 Your answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        disableNav: true,\n        timeLeft: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: \"Loading questions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        disableNav: true,\n        timeLeft: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto px-4 py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      disableNav: !quizSubmitted,\n      timeLeft: quizSubmitted ? null : timeLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-gray-800\",\n              children: [\"Quiz - \", (_questions$ = questions[0]) === null || _questions$ === void 0 ? void 0 : (_questions$$category = _questions$.category) === null || _questions$$category === void 0 ? void 0 : _questions$$category.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600 mt-1\",\n              children: [questions.length, \" Questions \\u2022 \", formatTime(QUIZ_DURATION), \" Time Limit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), !quizSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-semibold bg-gray-100 px-3 py-1 rounded\",\n            children: [\"\\u23F1\\uFE0F \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), quizSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 p-4 bg-gray-50 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-2\",\n            children: \"Quiz Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg mb-2\",\n            children: [\"Score: \", score, \" point\", score !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\",\n            children: Object.entries(stats).map(([diff, stat]) => stat.total > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-3 rounded-lg ${diff === 'easy' ? 'bg-green-50' : diff === 'medium' ? 'bg-yellow-50' : 'bg-red-50'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: `font-medium ${getDifficultyColor(diff)}`,\n                children: diff.charAt(0).toUpperCase() + diff.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm\",\n                children: [stat.correct, \"/\", stat.total, \" correct (\", Math.round(stat.correct / stat.total * 100) || 0, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 25\n              }, this)]\n            }, diff, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border rounded-lg hover:shadow-sm transition-shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-lg font-medium\",\n                children: [index + 1, \". \", question.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-2 py-1 rounded-full text-xs ${getDifficultyColor(question.difficulty)} bg-opacity-10`,\n                children: question.difficulty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleAnswer(question._id, option),\n                  disabled: quizSubmitted,\n                  className: `w-full text-left p-3 border rounded-md transition-colors ${getOptionClasses(question, option)}`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: option\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 27\n                    }, this), getOptionLabel(question, option)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this)\n              }, optIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), quizSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 text-sm\",\n              children: [(!userAnswers[question._id] || userAnswers[question._id] !== question.correctOption) && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-600\",\n                children: [!userAnswers[question._id] ? 'Unanswered' : 'Incorrect', \". Correct answer: \", question.correctOption]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 23\n              }, this), userAnswers[question._id] === question.correctOption && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-green-600\",\n                children: [\"\\u2713 Correct! +\", calculatePoints(question.difficulty), \" point\", calculatePoints(question.difficulty) !== 1 ? 's' : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this)]\n          }, question._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), !quizSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => submitQuiz(),\n            className: \"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors\",\n            children: \"Submit Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/player/dashboard'),\n            className: \"w-full bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded-md transition-colors\",\n            children: \"Return to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"PvwEYetj2Ra7ajPChDjboyNyhYQ=\", false, function () {\n  return [useParams, useSearchParams, useNavigate, useAuth];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useState","useEffect","useRef","useParams","useSearchParams","useNavigate","axios","useAuth","toast","Navbar","jsxDEV","_jsxDEV","Quiz","_s","_questions$","_questions$$category","categoryId","searchParams","difficulty","get","count","parseInt","navigate","user","questions","setQuestions","userAnswers","setUserAnswers","loading","setLoading","error","setError","quizSubmitted","setQuizSubmitted","score","setScore","stats","setStats","easy","correct","total","medium","hard","QUIZ_DURATION","timeLeft","setTimeLeft","timerRef","fetchQuestions","_response$data","response","post","data","length","Error","err","_err$response","_err$response$data","message","current","clearInterval","setInterval","prev","handleTimeUp","info","submitQuiz","calculatePoints","points","handleAnswer","questionId","selectedOption","isTimeUp","totalScore","newStats","forEach","question","_id","isCorrect","correctOption","answers","map","success","console","getDifficultyColor","colors","getOptionClasses","option","wasSelected","getOptionLabel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formatTime","seconds","mins","Math","floor","secs","toString","padStart","disableNav","category","name","Object","entries","diff","stat","charAt","toUpperCase","slice","round","index","text","options","optIndex","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/New folder/Quiz-Management-system/Quiz-Management-System/frontend/src/pages/player/Quiz.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\r\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom'\r\nimport axios from '../../utils/axiosConfig'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { toast } from 'react-toastify'\r\nimport Navbar from './Navbar' // Assuming you have a Navbar component\r\n\r\nfunction Quiz() {\r\n  const { categoryId } = useParams()\r\n  const [searchParams] = useSearchParams()\r\n  const difficulty = searchParams.get('difficulty') || 'medium'\r\n  const count = parseInt(searchParams.get('count')) || 10\r\n  const navigate = useNavigate()\r\n  const { user } = useAuth()\r\n\r\n  const [questions, setQuestions] = useState([])\r\n  const [userAnswers, setUserAnswers] = useState({})\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState('')\r\n  const [quizSubmitted, setQuizSubmitted] = useState(false)\r\n  const [score, setScore] = useState(0)\r\n  const [stats, setStats] = useState({\r\n    easy: { correct: 0, total: 0 },\r\n    medium: { correct: 0, total: 0 },\r\n    hard: { correct: 0, total: 0 },\r\n  })\r\n\r\n  // Timer configuration (1 minute 30 seconds)\r\n  const QUIZ_DURATION = 90\r\n  const [timeLeft, setTimeLeft] = useState(QUIZ_DURATION)\r\n  const timerRef = useRef(null)\r\n\r\n  // Fetch questions on mount\r\n  useEffect(() => {\r\n    if (!categoryId || !user) {\r\n      navigate('/player/dashboard')\r\n      return\r\n    }\r\n\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const response = await axios.post('/api/quiz/questions', {\r\n          categoryId,\r\n          difficulty,\r\n          count,\r\n        })\r\n\r\n        if (!response.data?.length) {\r\n          throw new Error('No questions available')\r\n        }\r\n\r\n        setQuestions(response.data)\r\n      } catch (err) {\r\n        setError(err.response?.data?.message || err.message)\r\n        toast.error('Failed to load questions')\r\n        navigate('/player/dashboard')\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchQuestions()\r\n\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current)\r\n      }\r\n    }\r\n  }, [categoryId, difficulty, count, navigate, user])\r\n\r\n  // Timer logic\r\n  useEffect(() => {\r\n    if (loading || quizSubmitted) return\r\n\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(timerRef.current)\r\n          handleTimeUp()\r\n          return 0\r\n        }\r\n        return prev - 1\r\n      })\r\n    }, 1000)\r\n\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current)\r\n      }\r\n    }\r\n  }, [loading, quizSubmitted])\r\n\r\n  const handleTimeUp = async () => {\r\n    toast.info('Time is up! Your answers are being submitted...')\r\n    await submitQuiz(true)\r\n  }\r\n\r\n  const calculatePoints = (difficulty) => {\r\n    const points = {\r\n      easy: 1,\r\n      medium: 2,\r\n      hard: 3,\r\n    }\r\n    return points[difficulty] || 1\r\n  }\r\n\r\n  const handleAnswer = (questionId, selectedOption) => {\r\n    if (!quizSubmitted) {\r\n      setUserAnswers((prev) => ({\r\n        ...prev,\r\n        [questionId]: selectedOption,\r\n      }))\r\n    }\r\n  }\r\n\r\n  const submitQuiz = async (isTimeUp = false) => {\r\n    if (quizSubmitted) return\r\n\r\n    try {\r\n      // Calculate results\r\n      let totalScore = 0\r\n      const newStats = {\r\n        easy: { correct: 0, total: 0 },\r\n        medium: { correct: 0, total: 0 },\r\n        hard: { correct: 0, total: 0 },\r\n      }\r\n\r\n      questions.forEach((question) => {\r\n        const selectedOption = userAnswers[question._id]\r\n        const isCorrect = selectedOption === question.correctOption\r\n        const points = isCorrect ? calculatePoints(question.difficulty) : 0\r\n        totalScore += points\r\n\r\n        newStats[question.difficulty].total += 1\r\n        if (isCorrect) newStats[question.difficulty].correct += 1\r\n      })\r\n\r\n      // Submit to backend (only if not time-up)\r\n      if (!isTimeUp) {\r\n        await axios.post('/api/quiz/submit', {\r\n          categoryId,\r\n          answers: questions.map((question) => ({\r\n            questionId: question._id,\r\n            selectedOption: userAnswers[question._id] || null,\r\n            isCorrect: userAnswers[question._id] === question.correctOption,\r\n            points:\r\n              userAnswers[question._id] === question.correctOption\r\n                ? calculatePoints(question.difficulty)\r\n                : 0,\r\n            difficulty: question.difficulty,\r\n          })),\r\n          score: totalScore,\r\n          stats: newStats,\r\n        })\r\n      }\r\n\r\n      setScore(totalScore)\r\n      setStats(newStats)\r\n      setQuizSubmitted(true)\r\n\r\n      if (!isTimeUp) {\r\n        toast.success('Quiz submitted successfully!')\r\n      }\r\n    } catch (error) {\r\n      toast.error('Failed to submit quiz')\r\n      console.error('Quiz submission error:', error)\r\n    }\r\n  }\r\n\r\n  const getDifficultyColor = (difficulty) => {\r\n    const colors = {\r\n      easy: 'text-green-600',\r\n      medium: 'text-yellow-600',\r\n      hard: 'text-red-600',\r\n    }\r\n    return colors[difficulty] || 'text-gray-600'\r\n  }\r\n\r\n  const getOptionClasses = (question, option) => {\r\n    if (!quizSubmitted) {\r\n      return userAnswers[question._id] === option\r\n        ? 'bg-blue-100 border-blue-500'\r\n        : 'hover:bg-gray-50'\r\n    }\r\n\r\n    const isCorrect = option === question.correctOption\r\n    const wasSelected = userAnswers[question._id] === option\r\n\r\n    if (isCorrect) {\r\n      return 'bg-green-100 border-green-500'\r\n    }\r\n    if (wasSelected) {\r\n      return 'bg-red-100 border-red-500'\r\n    }\r\n    return 'bg-gray-50'\r\n  }\r\n\r\n  const getOptionLabel = (question, option) => {\r\n    if (!quizSubmitted) return null\r\n\r\n    const isCorrect = option === question.correctOption\r\n    const wasSelected = userAnswers[question._id] === option\r\n\r\n    if (isCorrect) {\r\n      return (\r\n        <span className=\"ml-2 text-green-600 text-sm\">✓ Correct answer</span>\r\n      )\r\n    }\r\n    if (wasSelected) {\r\n      return <span className=\"ml-2 text-red-600 text-sm\">✗ Your answer</span>\r\n    }\r\n    return null\r\n  }\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60)\r\n    const secs = seconds % 60\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100\">\r\n        <Navbar disableNav={true} timeLeft={null} />\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n          <div className=\"text-center\">Loading questions...</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100\">\r\n        <Navbar disableNav={true} timeLeft={null} />\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <Navbar\r\n        disableNav={!quizSubmitted}\r\n        timeLeft={quizSubmitted ? null : timeLeft}\r\n      />\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold text-gray-800\">\r\n                Quiz - {questions[0]?.category?.name}\r\n              </h1>\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                {questions.length} Questions • {formatTime(QUIZ_DURATION)} Time\r\n                Limit\r\n              </p>\r\n            </div>\r\n            {!quizSubmitted && (\r\n              <div className=\"text-lg font-semibold bg-gray-100 px-3 py-1 rounded\">\r\n                ⏱️ {formatTime(timeLeft)}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {quizSubmitted && (\r\n            <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n              <h2 className=\"text-xl font-bold mb-2\">Quiz Results</h2>\r\n              <p className=\"text-lg mb-2\">\r\n                Score: {score} point{score !== 1 ? 's' : ''}\r\n              </p>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\r\n                {Object.entries(stats).map(\r\n                  ([diff, stat]) =>\r\n                    stat.total > 0 && (\r\n                      <div\r\n                        key={diff}\r\n                        className={`p-3 rounded-lg ${\r\n                          diff === 'easy'\r\n                            ? 'bg-green-50'\r\n                            : diff === 'medium'\r\n                            ? 'bg-yellow-50'\r\n                            : 'bg-red-50'\r\n                        }`}\r\n                      >\r\n                        <p\r\n                          className={`font-medium ${getDifficultyColor(diff)}`}\r\n                        >\r\n                          {diff.charAt(0).toUpperCase() + diff.slice(1)}\r\n                        </p>\r\n                        <p className=\"text-sm\">\r\n                          {stat.correct}/{stat.total} correct (\r\n                          {Math.round((stat.correct / stat.total) * 100) || 0}%)\r\n                        </p>\r\n                      </div>\r\n                    )\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"space-y-6\">\r\n            {questions.map((question, index) => (\r\n              <div\r\n                key={question._id}\r\n                className=\"p-4 border rounded-lg hover:shadow-sm transition-shadow\"\r\n              >\r\n                <div className=\"flex justify-between items-start mb-4\">\r\n                  <p className=\"text-lg font-medium\">\r\n                    {index + 1}. {question.text}\r\n                  </p>\r\n                  <span\r\n                    className={`px-2 py-1 rounded-full text-xs ${getDifficultyColor(\r\n                      question.difficulty\r\n                    )} bg-opacity-10`}\r\n                  >\r\n                    {question.difficulty}\r\n                  </span>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  {question.options.map((option, optIndex) => (\r\n                    <div key={optIndex} className=\"flex items-center\">\r\n                      <button\r\n                        onClick={() => handleAnswer(question._id, option)}\r\n                        disabled={quizSubmitted}\r\n                        className={`w-full text-left p-3 border rounded-md transition-colors ${getOptionClasses(\r\n                          question,\r\n                          option\r\n                        )}`}\r\n                      >\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span>{option}</span>\r\n                          {getOptionLabel(question, option)}\r\n                        </div>\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                {quizSubmitted && (\r\n                  <div className=\"mt-3 text-sm\">\r\n                    {(!userAnswers[question._id] ||\r\n                      userAnswers[question._id] !== question.correctOption) && (\r\n                      <p className=\"text-red-600\">\r\n                        {!userAnswers[question._id]\r\n                          ? 'Unanswered'\r\n                          : 'Incorrect'}\r\n                        . Correct answer: {question.correctOption}\r\n                      </p>\r\n                    )}\r\n                    {userAnswers[question._id] === question.correctOption && (\r\n                      <p className=\"text-green-600\">\r\n                        ✓ Correct! +{calculatePoints(question.difficulty)} point\r\n                        {calculatePoints(question.difficulty) !== 1 ? 's' : ''}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {!quizSubmitted ? (\r\n            <div className=\"mt-6\">\r\n              <button\r\n                onClick={() => submitQuiz()}\r\n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors\"\r\n              >\r\n                Submit Quiz\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"mt-6\">\r\n              <button\r\n                onClick={() => navigate('/player/dashboard')}\r\n                className=\"w-full bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded-md transition-colors\"\r\n              >\r\n                Return to Dashboard\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quiz\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}